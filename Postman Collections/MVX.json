{
  "info": {
    "_postman_id": "44d06c23-acb9-4af5-a964-f6c0aebaf5fd",
    "name": "MVX",
    "description": "Collection for testing Master Version APIs.",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "a124692b-a9ca-4ca2-bf53-ba6709a797d9",
      "name": "General Information",
      "description": null,
      "item": [
        {
          "_postman_id": "ac295bce-86ac-4f3a-a419-6c7430b84700",
          "name": "Items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cd9c7e54-a769-4838-9f71-37bc62ac5f24",
                "exec": [
                  "console.log('imvItems Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentNumberMissed, contentDisplayNameMissed, contentDisplayNameInLocalLanguageMissed, contentunitPriceMissed, contentUnitPriceInclVATMissed, contentBlockedMissed, contentInactiveMissed, contentSalesStartDateMissed, contentEndDateSalesMissed, contentItemCategoryMissed, contentAssemblyItemMissed, contentWidthMissed, contentHeightMissed, contentLengthMissed, contentGrossWeightMissed, contentUnitVolumeMissed, contentLastModifiedDateTimeMissed, contentUnitsPerParcelMissed,contentimvItemsBuyableOnlineMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"number\"))",
                  "            contentNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayNameInLocalLanguage\"))",
                  "            contentDisplayNameInLocalLanguageMissed = true;",
                  "        if(!param.hasOwnProperty(\"unitPrice\"))",
                  "            contentunitPriceMissed = true;",
                  "        if(!param.hasOwnProperty(\"unitPriceInclVAT\"))",
                  "            contentUnitPriceInclVATMissed = true;",
                  "        if(!param.hasOwnProperty(\"blocked\"))",
                  "            contentBlockedMissed = true;",
                  "        if(!param.hasOwnProperty(\"inactive\"))",
                  "            contentInactiveMissed = true;",
                  "        if(!param.hasOwnProperty(\"salesStartDate\"))",
                  "            contentSalesStartDateMissed = true;",
                  "        if(!param.hasOwnProperty(\"endDateSales\"))",
                  "            contentEndDateSalesMissed = true;",
                  "        if(!param.hasOwnProperty(\"itemCategory\"))",
                  "            contentItemCategoryMissed = true;",
                  "        if(!param.hasOwnProperty(\"assemblyItem\"))",
                  "            contentAssemblyItemMissed = true;",
                  "        if(!param.hasOwnProperty(\"width\"))",
                  "            contentWidthMissed = true;",
                  "        if(!param.hasOwnProperty(\"height\"))",
                  "            contentHeightMissed = true;   ",
                  "        if(!param.hasOwnProperty(\"length\"))",
                  "            contentLengthMissed = true;",
                  "        if(!param.hasOwnProperty(\"grossWeight\"))",
                  "            contentGrossWeightMissed = true;  ",
                  "        if(!param.hasOwnProperty(\"unitVolume\"))",
                  "            contentUnitVolumeMissed = true;            ",
                  "        if(!param.hasOwnProperty(\"lastModifiedDateTime\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"unitsPerParcel\"))",
                  "            contentUnitsPerParcelMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvItemsBuyableOnline\"))",
                  "            contentimvItemsBuyableOnlineMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentNumberMissed = contentDisplayNameMissed = contentDisplayNameInLocalLanguageMissed = contentunitPriceMissed = contentUnitPriceInclVATMissed = contentBlockedMissed = contentInactiveMissed = contentSalesStartDateMissed = contentEndDateSalesMissed = contentItemCategoryMissed = contentAssemblyItemMissed = contentWidthMissed = contentHeightMissed = contentLengthMissed = contentGrossWeightMissed = contentUnitVolumeMissed = contentLastModifiedDateTimeMissed = contentUnitsPerParcelMissed = contentimvItemsBuyableOnlineMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'number'\"] = !contentNumberMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'displayNameInLocalLanguage'\"] = !contentDisplayNameInLocalLanguageMissed;",
                  "tests[\"Body contains 'unitPrice'\"] = !contentunitPriceMissed;",
                  "tests[\"Body contains 'unitPriceInclVAT'\"] = !contentUnitPriceInclVATMissed;",
                  "tests[\"Body contains 'blocked'\"] = !contentBlockedMissed;",
                  "tests[\"Body contains 'inactive'\"] = !contentInactiveMissed;",
                  "tests[\"Body contains 'salesStartDate'\"] = !contentSalesStartDateMissed;",
                  "tests[\"Body contains 'endDateSales'\"] = !contentEndDateSalesMissed;",
                  "tests[\"Body contains 'itemCategory'\"] = !contentItemCategoryMissed;",
                  "tests[\"Body contains 'assemblyItem'\"] = !contentAssemblyItemMissed;",
                  "tests[\"Body contains 'width'\"] = !contentWidthMissed;",
                  "tests[\"Body contains 'height'\"] = !contentHeightMissed;",
                  "tests[\"Body contains 'length'\"] = !contentLengthMissed;",
                  "tests[\"Body contains 'grossWeight'\"] = !contentGrossWeightMissed;",
                  "tests[\"Body contains 'unitVolume'\"] = !contentUnitVolumeMissed;",
                  "tests[\"Body contains 'unitsPerParcel'\"] = !contentUnitsPerParcelMissed;",
                  "tests[\"Body contains 'lastModifiedDateTime'\"] = !contentLastModifiedDateTimeMissed;",
                  "tests[\"Body contains 'imvItemsBuyableOnline'\"] = !contentimvItemsBuyableOnlineMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}imvItems?$expand=imvItemsBuyableOnline",
              "host": [
                "{{url}}{{storeCompany}}imvItems"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvItemsBuyableOnline"
                }
              ]
            },
            "description": "Article related information. Exposes all articles including food, and old articles. Filters should be used if certain articles are not relevant for integration."
          },
          "response": []
        },
        {
          "_postman_id": "2052271d-4561-46bf-9a8c-4ce2373c4d85",
          "name": "SPRs",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa76a704-b92c-4b34-9e6d-9a3464e764bc",
                "exec": [
                  "console.log('imvSprs Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentNumberMissed, contentTypeMissed, contentDisplayNameMissed, contentDisplayNameInLocalLanguageMissed, contentUnitPriceInclVATMissed, contenFullyReleasedMissed,  contentEndDateSalesMissed, contentSalesStartDateMissed, contentActiveMissed, contentSaleableMissed, contentNumberOfPackagesMissed, contentNumberOfArticlesMissed, contentSprCategoryMissed, contentLastModifiedDateTimeMissed, contentImvSprItemsMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"number\"))",
                  "            contentNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"type\"))",
                  "            contentTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayNameInLocalLanguage\"))",
                  "            contentDisplayNameInLocalLanguageMissed = true;",
                  "        if(!param.hasOwnProperty(\"unitPriceInclVAT\"))",
                  "            contentUnitPriceInclVATMissed = true;",
                  "        if(!param.hasOwnProperty(\"fullyReleased\"))",
                  "            contenFullyReleasedMissed = true;",
                  "        if(!param.hasOwnProperty(\"endDateSales\"))",
                  "            contentEndDateSalesMissed = true;",
                  "        if(!param.hasOwnProperty(\"salesStartDate\"))",
                  "            contentSalesStartDateMissed = true;",
                  "        if(!param.hasOwnProperty(\"active\"))",
                  "            contentActiveMissed = true;",
                  "        if(!param.hasOwnProperty(\"saleable\"))",
                  "            contentSaleableMissed = true;",
                  "        if(!param.hasOwnProperty(\"numberOfPackages\"))",
                  "            contentNumberOfPackagesMissed = true;",
                  "        if(!param.hasOwnProperty(\"numberOfArticles\"))",
                  "            contentNumberOfArticlesMissed = true;",
                  "        if(!param.hasOwnProperty(\"sprCategory\"))",
                  "            contentSprCategoryMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastModifiedDateTime\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvSprItems\"))",
                  "            contentImvSprItemsMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentNumberMissed = contentTypeMissed = contentDisplayNameMissed = contentDisplayNameInLocalLanguageMissed = contentUnitPriceInclVATMissed = contenFullyReleasedMissed =  contentEndDateSalesMissed = contentSalesStartDateMissed = contentActiveMissed = contentSaleableMissed = contentNumberOfPackagesMissed = contentNumberOfArticlesMissed = contentSprCategoryMissed = contentLastModifiedDateTimeMissed = contentImvSprItemsMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'number'\"] = !contentNumberMissed;",
                  "tests[\"Body contains 'type'\"] = !contentTypeMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'displayNameInLocalLanguage'\"] = !contentDisplayNameInLocalLanguageMissed;",
                  "tests[\"Body contains 'unitPriceInclVAT'\"] = !contentUnitPriceInclVATMissed;",
                  "tests[\"Body contains 'fullyReleased'\"] = !contenFullyReleasedMissed;",
                  "tests[\"Body contains 'endDateSales'\"] = !contentEndDateSalesMissed;",
                  "tests[\"Body contains 'salesStartDate'\"] = !contentSalesStartDateMissed;",
                  "tests[\"Body contains 'active'\"] = !contentActiveMissed;",
                  "tests[\"Body contains 'saleable'\"] = !contentSaleableMissed;",
                  "tests[\"Body contains 'numberOfPackages'\"] = !contentNumberOfPackagesMissed;",
                  "tests[\"Body contains 'numberOfArticles'\"] = !contentNumberOfArticlesMissed;",
                  "tests[\"Body contains 'sprCategory'\"] = !contentSprCategoryMissed;",
                  "tests[\"Body contains 'lastModifiedDateTime'\"] = !contentLastModifiedDateTimeMissed;",
                  "tests[\"Body contains 'imvSprItems'\"] = !contentImvSprItemsMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}imvSprs?$expand=imvSprItems",
              "host": [
                "{{url}}{{storeCompany}}imvSprs"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvSprItems"
                }
              ]
            },
            "description": "SPR related information. SPR stands for sales product. It's combination of multiple items that makes one sales product. For e.g. sofas are often SPRs consisting of two items: frame, & sofa cover.\r\nExposes all SPRs including old or not complete ones. Filters should be used if certain articles are not relevant for integration. To get the list of all active SPRs today use the following filters:\r\nSales Start Date\r\n\r\nsalesStartDate = is not empty and <= TODAY\r\nendDateSales = is empty or >=TODAY\r\nfullyReleased = yes\r\nactive =yes\r\nsaleable =yes"
          },
          "response": []
        },
        {
          "_postman_id": "2af8f611-c9ea-4513-bdd1-64a560274058",
          "name": "PostCodes",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fe34abeb-f33f-458f-bb43-371192e85268",
                "exec": [
                  "console.log('imvPostCodes Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentCodeMissed, contentCityMissed, contentAreaCodeMissed, contentCityCodeMissed, contentCountryRegionMissed, contentCountryRegionNameMissed, contentCounty, contentCenterLatitudeMissed, contentCenterLongitudeMissed, contentMinBorderDistanceMissed, contentMaxBorderDistanceMissed, contentLastModifiedDateTimeMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\")) {",
                  "    jsonData.value.forEach(function(param) {",
                  "        if (!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if (!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if (!param.hasOwnProperty(\"code\"))",
                  "            contentNumberMissed = true;",
                  "        if (!param.hasOwnProperty(\"city\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if (!param.hasOwnProperty(\"countryRegion\"))",
                  "            contentCountryRegionMissed = true;",
                  "        if (!param.hasOwnProperty(\"countryRegionName\"))",
                  "            contentCountryRegionNameMissed = true;",
                  "",
                  "",
                  "        if (!param.hasOwnProperty(\"cityCode\"))",
                  "            contentCityCodeMissed = true;",
                  "",
                  "        if (!param.hasOwnProperty(\"areaCode\"))",
                  "            contentAreaCodeMissed = true;",
                  "",
                  "        if (!param.hasOwnProperty(\"county\"))",
                  "            contentunitPriceMissed = true;",
                  "        if (!param.hasOwnProperty(\"centerLatitude\"))",
                  "            contentCenterLatitudeMissed = true;",
                  "        if (!param.hasOwnProperty(\"centerLongitude\"))",
                  "            contentCenterLongitudeMissed = true;",
                  "        if (!param.hasOwnProperty(\"minBorderDistance\"))",
                  "            contentMinBorderDistanceMissed = true;",
                  "        if (!param.hasOwnProperty(\"maxBorderDistance\"))",
                  "            contentMaxBorderDistanceMissed = true;",
                  "        if (!param.hasOwnProperty(\"lastModifiedDateTime\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "    })",
                  "} else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentCodeMissed = contentAreaCodeMissed = contentCityCodeMissed = contentCityMissed = contentCountryRegionMissed = contentCountryRegionNameMissed = contentCounty = contentCenterLatitudeMissed = contentCenterLongitudeMissed = contentMinBorderDistanceMissed = contentMaxBorderDistanceMissed = contentLastModifiedDateTimeMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'code'\"] = !contentCodeMissed;",
                  "tests[\"Body contains 'city'\"] = !contentCityMissed;",
                  "tests[\"Body contains 'areaCode'\"] = !contentAreaCodeMissed;",
                  "tests[\"Body contains 'cityCode'\"] = !contentCityCodeMissed;",
                  "tests[\"Body contains 'countryRegion'\"] = !contentCountryRegionMissed;",
                  "tests[\"Body contains 'countryRegionName'\"] = !contentCountryRegionNameMissed;",
                  "tests[\"Body contains 'county'\"] = !contentCounty;",
                  "tests[\"Body contains 'centerLatitude'\"] = !contentCenterLatitudeMissed;",
                  "tests[\"Body contains 'centerLongitude'\"] = !contentCenterLongitudeMissed;",
                  "tests[\"Body contains 'minBorderDistance'\"] = !contentMinBorderDistanceMissed;",
                  "tests[\"Body contains 'maxBorderDistance'\"] = !contentMaxBorderDistanceMissed;",
                  "tests[\"Body contains 'LastModifiedDateTime'\"] = !contentLastModifiedDateTimeMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}{{storeCompany}}imvPostCodes",
            "description": "Base entity to describe post codes. countries that does not have post code system, use this entity to describe areas in the country. It's later used for defining capacity areas, and price areas."
          },
          "response": []
        },
        {
          "_postman_id": "2e92ce7b-7da5-4dad-b9f3-0012c0b5cc78",
          "name": "CapacityAreas",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e8602a8-832d-46e7-8af0-e8c57b87343e",
                "exec": [
                  "console.log('imvCapacityAreas Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentCodeMissed, contentDisplayNameMissed, contentLastModifiedDateTimeMissed, contentImvCapacityPostCodesMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"code\"))",
                  "            contentCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastDateTimeModified\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvCapacityPostCodes\"))",
                  "            contentImvCapacityPostCodesMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentCodeMissed = contentDisplayNameMissed = contentLastModifiedDateTimeMissed = contentImvCapacityPostCodes = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'code'\"] = !contentCodeMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'lastDateTimeModified'\"] = !contentLastModifiedDateTimeMissed;",
                  "tests[\"Body contains 'imvCapacityPostCodes'\"] = !contentImvCapacityPostCodesMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvCapacityAreas?$expand=imvCapacityPostCodes",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvCapacityAreas"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvCapacityPostCodes"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a3314f1d-ac6b-44ec-8c93-51be7a3a4ff8",
          "name": "PriceAreas",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1f21b844-7dc4-4cd3-9d59-686894a5683d",
                "exec": [
                  "console.log('imvPriceAreas Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentCodeMissed, contentDisplayNameMissed, contentLastModifiedDateTimeMissed, contentImvPriceAreaPostCodesMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"code\"))",
                  "            contentCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastDateTimeModified\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvPriceAreaPostCodes\"))",
                  "            contentImvCapacityPostCodesMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentCodeMissed = contentDisplayNameMissed = contentLastModifiedDateTimeMissed = contentImvCapacityPostCodesMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'code'\"] = !contentCodeMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'lastDateTimeModified'\"] = !contentLastModifiedDateTimeMissed;",
                  "tests[\"Body contains 'imvPriceAreaPostCodes'\"] = !contentImvPriceAreaPostCodesMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvCapacityAreas?$expand=imvCapacityPostCodes",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvCapacityAreas"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvCapacityPostCodes"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "5e1ed3af-553d-40e1-9fb9-1837a0a819d3",
          "name": "AreaCities",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57f10595-3522-4377-8768-9edfa9840e62",
                "exec": [
                  "console.log('imvAreaCities Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentCodeMissed, contentRegionTypeMissed, contentParentCodeMissed, contentDescriptionMissed, contentDescription2Missed, contentLastModifiedDateTimeMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"code\"))",
                  "            contentCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"regionType\"))",
                  "            contentRegionTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"parentCode\"))",
                  "            contentParentCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"description\"))",
                  "            contentDescriptionMissed = true;",
                  "        if(!param.hasOwnProperty(\"description2\"))",
                  "            contentDescription2Missed = true;",
                  "        if(!param.hasOwnProperty(\"lastDateTimeModified\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentCodeMissed = contentRegionTypeMissed = contentParentCodeMissed = contentDescriptionMissed = contentDescription2Missed = lastDateTimeModified = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'code'\"] = !contentCodeMissed;",
                  "tests[\"Body contains 'RegionType'\"] = !contentRegionTypeMissed;",
                  "tests[\"Body contains 'ParentCode'\"] = !contentParentCodeMissed;",
                  "tests[\"Body contains 'Description'\"] = !contentDescriptionMissed;",
                  "tests[\"Body contains 'Description2'\"] = !contentDescription2Missed;",
                  "tests[\"Body contains 'lastDateTimeModified'\"] = !contentLastModifiedDateTimeMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}{{storeCompany}}imvAreaCities",
            "description": "Base entity to describe Area/City."
          },
          "response": [
            {
              "id": "5a97ee76-e019-4f70-aa20-a4ec6abca429",
              "name": "AreaCities",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic SU1WX0FQSVVTRVI6UEBzc3dvcmQwMQ=="
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "https://mvxtesting.k3devops.nl:7048/NAV/api/beta/companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)/imvAreaCities"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Length",
                  "value": "3333"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; odata.metadata=minimal"
                },
                {
                  "key": "Server",
                  "value": "Microsoft-HTTPAPI/2.0"
                },
                {
                  "key": "request-id",
                  "value": "41897edc-05ee-4d61-80fb-4f1fef9ce56e"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Date"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Content-Length"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Server"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "OData-Version"
                },
                {
                  "key": "OData-Version",
                  "value": "4.0"
                },
                {
                  "key": "Date",
                  "value": "Thu, 11 Oct 2018 08:32:07 GMT"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)/imvAreaCities\",\n    \"value\": [\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk9RQUFBQUFBMTE7MTM3NjEyNDU0NjAwOyc=\\\"\",\n            \"id\": \"6dad52bd-c9df-442f-942c-08c6ee97d298\",\n            \"code\": \"9\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test11111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:32.327Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk5RQUFBQUFBMTE7MTM3NjEyNDU0NDkwOyc=\\\"\",\n            \"id\": \"4ae65a4d-5314-4f85-95c5-35ce7c5d2a17\",\n            \"code\": \"5\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"111111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:29.467Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQwO3FUWUJBQUNMQUFBQUFBSjdBVE1BQUFBQ2V3TXdBREFBTWdBQUFBQUExMTsxMzc2MzAyODQ2ODA7Jw==\\\"\",\n            \"id\": \"f477ab9c-a579-49e7-b0a5-41f810c2c07f\",\n            \"code\": \"002\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"3\",\n            \"description\": \"Local area\",\n            \"description2\": \"Wide Local area\",\n            \"lastDateTimeModified\": \"2018-10-11T08:17:06.017Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk13QUFBQUFBMTE7MTM3NjEyNDU0NDcwOyc=\\\"\",\n            \"id\": \"f377a517-1f61-4260-a869-427017cc5075\",\n            \"code\": \"3\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test1111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:28.81Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQwO3FUWUJBQUNMQUFBQUFBSjdBakVBTWdBQUFBSjdBVEVBQUFBQUFBPT0xMTsxMzc2MTI0NTQ0NTA7Jw==\\\"\",\n            \"id\": \"d4f9cddd-7782-4e63-8f83-47c0afa7929c\",\n            \"code\": \"1\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"12\",\n            \"description\": \"test1\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:27.43Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk5BQUFBQUFBMTE7MTM3NjEyNDU0NDgwOyc=\\\"\",\n            \"id\": \"d1de21ba-5340-4424-9c24-69d9351f302b\",\n            \"code\": \"4\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test11111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:29.123Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQwO3FUWUJBQUNMQVFBQUFBSjdBQUFBQW5zRE1BQXdBREVBQUFBQUFBPT0xMTsxMzc2MzAwMzgzMDA7Jw==\\\"\",\n            \"id\": \"b2cebc00-ddc1-4074-b252-8bc955cb4f65\",\n            \"code\": \"001\",\n            \"regionType\": \"City\",\n            \"parentCode\": \"\",\n            \"description\": \"\",\n            \"description2\": \"Description\",\n            \"lastDateTimeModified\": \"2018-10-10T14:32:29.753Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk9BQUFBQUFBMTE7MTM3NjEyNDU0NzkwOyc=\\\"\",\n            \"id\": \"674b7371-b6cb-40df-a5d1-b10c8c838579\",\n            \"code\": \"8\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:33.107Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk53QUFBQUFBMTE7MTM3NjEyNDU0NTEwOyc=\\\"\",\n            \"id\": \"4a0532ba-d07e-48ab-b2a9-d8a2208761e2\",\n            \"code\": \"7\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test11111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:30.137Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzMyO3FUWUJBQUNMQUFBQUFBSjdBQUFBQW5zQk5nQUFBQUFBMTE7MTM3NjEyNDU0NTAwOyc=\\\"\",\n            \"id\": \"2e5adb88-3047-43ad-ad9e-ef0c9f5dc120\",\n            \"code\": \"6\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"\",\n            \"description\": \"test1111111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:29.81Z\"\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQwO3FUWUJBQUNMQUFBQUFBSjdBakVBTWdBQUFBSjdBVElBQUFBQUFBPT0xMTsxMzc2MTI0NTQ0NjA7Jw==\\\"\",\n            \"id\": \"c74327b5-4545-4872-8924-fc1361877aef\",\n            \"code\": \"2\",\n            \"regionType\": \"Area\",\n            \"parentCode\": \"12\",\n            \"description\": \"test111\",\n            \"description2\": \"d2\",\n            \"lastDateTimeModified\": \"2018-10-10T14:04:28.497Z\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "_postman_id": "0cfed1fc-7950-4dc3-987b-b12fbdc20d71",
          "name": "ItemStockLevels",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1aa92673-6c63-4502-9c7c-e161d55eb62d",
                "exec": [
                  "console.log('imvItemsStockLevel Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentitemNumberMissed, contentstoreMissed, contentlocationMissed, contentsellableStockMissed, contentstockOnPickingLocationMissed, contentLastModifiedDateTimeMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"itemNumber\"))",
                  "            contentitemNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"store\"))",
                  "            contentstoreMissed = true;",
                  "        if(!param.hasOwnProperty(\"location\"))",
                  "            contentlocationMissed = true;",
                  "        if(!param.hasOwnProperty(\"sellableStock\"))",
                  "            contentsellableStockMissed = true;",
                  "        if(!param.hasOwnProperty(\"stockOnPickingLocation\"))",
                  "            contentstockOnPickingLocationMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastModifiedDateTime\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentitemNumberMissed = contentstoreMissed = contentlocationMissed = contentsellableStockMissed = contentstockOnPickingLocationMissed = contentLastModifiedDateTimeMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'itemNumber'\"] = !contentitemNumberMissed;",
                  "tests[\"Body contains 'store'\"] = !contentstoreMissed;",
                  "tests[\"Body contains 'location'\"] = !contentlocationMissed;",
                  "tests[\"Body contains 'sellableStock'\"] = !contentsellableStockMissed;",
                  "tests[\"Body contains 'stockOnPickingLocation'\"] = !contentstockOnPickingLocationMissed;",
                  "tests[\"Body contains 'lastModifiedDateTime'\"] = !contentLastModifiedDateTimeMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}{{storeCompany}}imvItemsStockLevel"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a0285d6f-7ef4-41f6-89c0-366189f3b26c",
      "name": "Orders",
      "description": null,
      "item": [
        {
          "_postman_id": "3988b915-6b1c-4fd6-8863-c833810d676c",
          "name": "SalesOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7df716d-8d97-46cf-8ec6-40e035b683b8",
                "exec": [
                  "console.log('Get imveCommOrders Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        tests[\"Body contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
                  "        tests[\"Body contains 'id'\"] =  param.hasOwnProperty(\"id\");",
                  "        tests[\"Body contains 'eCommOrderNo'\"] =  param.hasOwnProperty(\"eCommOrderNo\");",
                  "        tests[\"Body contains 'orderDate'\"] =  param.hasOwnProperty(\"orderDate\");",
                  "        tests[\"Body contains 'orderTime'\"] =  param.hasOwnProperty(\"orderTime\");",
                  "        tests[\"Body contains 'storeNo'\"] =  param.hasOwnProperty(\"storeNo\");",
                  "        tests[\"Body contains 'eCommCustomerNo'\"] =  param.hasOwnProperty(\"eCommCustomerNo\");",
                  "        tests[\"Body contains 'note'\"] =  param.hasOwnProperty(\"note\");",
                  "        tests[\"Body contains 'customerLanguage'\"] =  param.hasOwnProperty(\"customerLanguage\");",
                  "        tests[\"Body contains 'sellToInformation'\"] =  param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'sellToInformation'\"] = param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'billToInformation'\"] = param.hasOwnProperty(\"billToInformation\");",
                  "        tests[\"Body contains 'shipToInformation'\"] = param.hasOwnProperty(\"shipToInformation\");",
                  "        tests[\"Body contains 'imveCommOrderLines@odata.context'\"] = param.hasOwnProperty(\"imveCommOrderLines@odata.context\");",
                  "        tests[\"Body contains 'imveCommOrderLines'\"] = param.hasOwnProperty(\"imveCommOrderLines\");",
                  "        tests[\"Body contains 'imveCommOrderServices@odata.context'\"] = param.hasOwnProperty(\"imveCommOrderServices@odata.context\");",
                  "        tests[\"Body contains 'imveCommOrderServices'\"] = param.hasOwnProperty(\"imveCommOrderServices\");",
                  "        tests[\"Body contains 'imveCommServiceOrderItems@odata.context'\"] = param.hasOwnProperty(\"imveCommServiceOrderItems@odata.context\");",
                  "        tests[\"Body contains 'imveCommServiceOrderItems'\"] = param.hasOwnProperty(\"imveCommServiceOrderItems\");",
                  "        tests[\"Body contains 'imveCommPayments@odata.context'\"] = param.hasOwnProperty(\"imveCommPayments@odata.context\");",
                  "        tests[\"Body contains 'imveCommPayments'\"] = param.hasOwnProperty(\"imveCommPayments\");",
                  "        if (param.hasOwnProperty(\"sellToInformation\"))",
                  "        {",
                  "            tests[\"sellToInformation contains 'name'\"] = param.sellToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"sellToInformation contains 'street'\"] = param.sellToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"sellToInformation contains 'city'\"] = param.sellToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"sellToInformation contains 'state'\"] = param.sellToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"sellToInformation contains 'countryLetterCode'\"] = param.sellToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"sellToInformation contains 'postalCode'\"] = param.sellToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"sellToInformation contains 'email'\"] = param.sellToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"sellToInformation contains 'phoneNumber'\"] = param.sellToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"billToInformation\"))",
                  "        {",
                  "            tests[\"billToInformation contains 'name'\"] = param.billToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"billToInformation contains 'street'\"] = param.billToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"billToInformation contains 'city'\"] = param.billToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"billToInformation contains 'state'\"] = param.billToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"billToInformation contains 'countryLetterCode'\"] = param.billToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"billToInformation contains 'postalCode'\"] = param.billToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"billToInformation contains 'email'\"] = param.billToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"billToInformation contains 'phoneNumber'\"] = param.billToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"shipToInformation\"))",
                  "        {",
                  "            tests[\"shipToInformation contains 'name'\"] = param.shipToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"shipToInformation contains 'street'\"] = param.shipToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"shipToInformation contains 'city'\"] = param.shipToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"shipToInformation contains 'state'\"] = param.shipToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"shipToInformation contains 'countryLetterCode'\"] = param.shipToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"shipToInformation contains 'postalCode'\"] = param.shipToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"shipToInformation contains 'email'\"] = param.shipToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"shipToInformation contains 'phoneNumber'\"] = param.shipToInformation.hasOwnProperty(\"phoneNumber\");",
                  "            tests[\"shipToInformation contains 'latitude'\"] = param.shipToInformation.hasOwnProperty(\"latitude\");",
                  "            tests[\"shipToInformation contains 'longitude'\"] = param.shipToInformation.hasOwnProperty(\"longitude\");",
                  "        }",
                  "        if (param.hasOwnProperty(\"imveCommOrderLines\"))",
                  "        {",
                  "            param.imveCommOrderLines.forEach(function(param){",
                  "                tests[\"imveCommOrderLines contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "                tests[\"imveCommOrderLines contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "                tests[\"imveCommOrderLines contains 'lineType'\"] = param.hasOwnProperty(\"lineType\");",
                  "                tests[\"imveCommOrderLines contains 'number'\"] = param.hasOwnProperty(\"number\");",
                  "                tests[\"imveCommOrderLines contains 'displayName'\"] = param.hasOwnProperty(\"displayName\");",
                  "                tests[\"imveCommOrderLines contains 'displayNameInLocalLanguage'\"] = param.hasOwnProperty(\"displayNameInLocalLanguage\");",
                  "                tests[\"imveCommOrderLines contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "                tests[\"imveCommOrderLines contains 'unitPrice'\"] = param.hasOwnProperty(\"unitPrice\");",
                  "                tests[\"imveCommOrderLines contains 'unitPriceIncludingTax'\"] = param.hasOwnProperty(\"unitPriceIncludingTax\");",
                  "                tests[\"imveCommOrderLines contains 'taxPercent'\"] = param.hasOwnProperty(\"taxPercent\");",
                  "                tests[\"imveCommOrderLines contains 'netAmount'\"] = param.hasOwnProperty(\"netAmount\");",
                  "                tests[\"imveCommOrderLines contains 'netAmountIncludingTax'\"] = param.hasOwnProperty(\"netAmountIncludingTax\");",
                  "                tests[\"imveCommOrderLines contains 'note'\"] = param.hasOwnProperty(\"note\");",
                  "            })",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"imveCommOrderServices\"))",
                  "        {",
                  "            param.imveCommOrderServices.forEach(function(param){",
                  "                tests[\"imveCommOrderServices contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "                tests[\"imveCommOrderServices contains 'reservationID'\"] = param.hasOwnProperty(\"reservationID\");",
                  "                tests[\"imveCommOrderServices contains 'serviceProductNo'\"] = param.hasOwnProperty(\"serviceProductNo\");",
                  "                tests[\"imveCommOrderServices contains 'timeslotNo'\"] = param.hasOwnProperty(\"timeslotNo\");",
                  "                tests[\"imveCommOrderServices contains 'price'\"] = param.hasOwnProperty(\"price\");",
                  "                tests[\"imveCommOrderServices contains 'priceIncludingTax'\"] = param.hasOwnProperty(\"priceIncludingTax\");",
                  "                tests[\"imveCommOrderServices contains 'priceCalcMethod'\"] = param.hasOwnProperty(\"priceCalcMethod\");",
                  "                tests[\"imveCommOrderServices contains 'date'\"] = param.hasOwnProperty(\"date\");",
                  "                tests[\"imveCommOrderServices contains 'starttime'\"] = param.hasOwnProperty(\"starttime\");",
                  "                tests[\"imveCommOrderServices contains 'endtime'\"] = param.hasOwnProperty(\"endtime\");",
                  "                tests[\"imveCommOrderServices contains 'capacityunit'\"] = param.hasOwnProperty(\"capacityunit\");",
                  "                tests[\"imveCommOrderServices contains 'capacity'\"] = param.hasOwnProperty(\"capacity\");",
                  "                tests[\"imveCommOrderServices contains 'serviceProviderNo'\"] = param.hasOwnProperty(\"serviceProviderNo\");",
                  "            })",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"imveCommServiceOrderItems\"))",
                  "        {",
                  "            param.imveCommServiceOrderItems.forEach(function(param){",
                  "                tests[\"imveCommServiceOrderItems contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "                tests[\"imveCommServiceOrderItems contains 'reservationID'\"] = param.hasOwnProperty(\"reservationID\");",
                  "                tests[\"imveCommServiceOrderItems contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "                tests[\"imveCommServiceOrderItems contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "                tests[\"imveCommServiceOrderItems contains 'relatedItemSequenceNo'\"] = param.hasOwnProperty(\"relatedItemSequenceNo\");",
                  "            })",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"imveCommPayments\"))",
                  "        {",
                  "            param.imveCommPayments.forEach(function(param){",
                  "                tests[\"imveCommPayments contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "                tests[\"imveCommPayments contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "                tests[\"imveCommPayments contains 'referenceId'\"] = param.hasOwnProperty(\"referenceId\");",
                  "                tests[\"imveCommPayments contains 'date'\"] = param.hasOwnProperty(\"date\");",
                  "                tests[\"imveCommPayments contains 'type'\"] = param.hasOwnProperty(\"type\");",
                  "                tests[\"imveCommPayments contains 'currencyCode'\"] = param.hasOwnProperty(\"currencyCode\");",
                  "                tests[\"imveCommPayments contains 'amount'\"] = param.hasOwnProperty(\"amount\");",
                  "                tests[\"imveCommPayments contains 'document'\"] = param.hasOwnProperty(\"document\");",
                  "            })",
                  "        }",
                  "    })",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}/imveCommOrders?$expand=imveCommOrderLines,imveCommOrderServices,imveCommServiceOrderItems,imveCommPayments",
              "host": [
                "{{url}}{{storeCompany}}"
              ],
              "path": [
                "imveCommOrders"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imveCommOrderLines,imveCommOrderServices,imveCommServiceOrderItems,imveCommPayments"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "1b361e11-2c2e-41d6-b722-15969c2e1834",
          "name": "SalesOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7df716d-8d97-46cf-8ec6-40e035b683b8",
                "exec": [
                  "console.log('imveCommOrders Entity Automated Tests');",
                  "tests[\"Status Code is 201\"] = responseCode.code === 201;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains '@odata.etag'\"] = jsonData.hasOwnProperty(\"@odata.etag\");",
                  "tests[\"Body contains 'Id'\"] = jsonData.hasOwnProperty(\"Id\");",
                  "tests[\"Body contains 'eCommOrderNo'\"] = jsonData.hasOwnProperty(\"eCommOrderNo\");",
                  "tests[\"Body contains 'orderDate'\"] = jsonData.hasOwnProperty(\"orderDate\");",
                  "tests[\"Body contains 'orderTime'\"] = jsonData.hasOwnProperty(\"orderTime\");",
                  "tests[\"Body contains 'storeNo'\"] = jsonData.hasOwnProperty(\"storeNo\");",
                  "tests[\"Body contains 'eCommCustomerNo'\"] = jsonData.hasOwnProperty(\"eCommCustomerNo\");",
                  "tests[\"Body contains 'note'\"] = jsonData.hasOwnProperty(\"note\");",
                  "tests[\"Body contains 'customerLanguage'\"] = jsonData.hasOwnProperty(\"customerLanguage\");",
                  "tests[\"Body contains 'sellToInformation'\"] = jsonData.hasOwnProperty(\"sellToInformation\");",
                  "tests[\"Body contains 'billToInformation'\"] = jsonData.hasOwnProperty(\"billToInformation\");",
                  "tests[\"Body contains 'shipToInformation'\"] = jsonData.hasOwnProperty(\"shipToInformation\");",
                  "tests[\"Body contains 'imveCommOrderLines@odata.context'\"] = jsonData.hasOwnProperty(\"imveCommOrderLines@odata.context\");",
                  "tests[\"Body contains 'imveCommOrderLines'\"] = jsonData.hasOwnProperty(\"imveCommOrderLines\");",
                  "tests[\"Body contains 'imveCommOrderServices@odata.context'\"] = jsonData.hasOwnProperty(\"imveCommOrderServices@odata.context\");",
                  "tests[\"Body contains 'imveCommOrderServices'\"] = jsonData.hasOwnProperty(\"imveCommOrderServices\");",
                  "tests[\"Body contains 'imveCommPayments@odata.context'\"] = jsonData.hasOwnProperty(\"imveCommPayments@odata.context\");",
                  "tests[\"Body contains 'imveCommPayments'\"] = jsonData.hasOwnProperty(\"imveCommPayments\");",
                  "",
                  "if (jsonData.hasOwnProperty(\"Id\"))",
                  "{",
                  "    var id = jsonData.Id;",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"sellToInformation\"))",
                  "{",
                  "    tests[\"Body contains 'name'\"] = jsonData.sellToInformation.hasOwnProperty(\"name\");",
                  "    tests[\"Body contains 'street'\"] = jsonData.sellToInformation.hasOwnProperty(\"street\");",
                  "    tests[\"Body contains 'city'\"] = jsonData.sellToInformation.hasOwnProperty(\"city\");",
                  "    tests[\"Body contains 'state'\"] = jsonData.sellToInformation.hasOwnProperty(\"state\");",
                  "    tests[\"Body contains 'countryLetterCode'\"] = jsonData.sellToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "    tests[\"Body contains 'postalCode'\"] = jsonData.sellToInformation.hasOwnProperty(\"postalCode\");",
                  "    tests[\"Body contains 'email'\"] = jsonData.sellToInformation.hasOwnProperty(\"email\");",
                  "    tests[\"Body contains 'phoneNumber'\"] = jsonData.sellToInformation.hasOwnProperty(\"phoneNumber\");",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"billToInformation\"))",
                  "{",
                  "    tests[\"Body contains 'name'\"] = jsonData.billToInformation.hasOwnProperty(\"name\");",
                  "    tests[\"Body contains 'street'\"] = jsonData.billToInformation.hasOwnProperty(\"street\");",
                  "    tests[\"Body contains 'city'\"] = jsonData.billToInformation.hasOwnProperty(\"city\");",
                  "    tests[\"Body contains 'state'\"] = jsonData.billToInformation.hasOwnProperty(\"state\");",
                  "    tests[\"Body contains 'countryLetterCode'\"] = jsonData.billToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "    tests[\"Body contains 'postalCode'\"] = jsonData.billToInformation.hasOwnProperty(\"postalCode\");",
                  "    tests[\"Body contains 'email'\"] = jsonData.billToInformation.hasOwnProperty(\"email\");",
                  "    tests[\"Body contains 'phoneNumber'\"] = jsonData.billToInformation.hasOwnProperty(\"phoneNumber\");",
                  "    tests[\"Body contains 'name'\"] = jsonData.billToInformation.hasOwnProperty(\"name\");",
                  "    tests[\"Body contains 'name'\"] = jsonData.billToInformation.hasOwnProperty(\"name\");",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"shipToInformation\"))",
                  "{",
                  "    tests[\"Body contains 'name'\"] = jsonData.shipToInformation.hasOwnProperty(\"name\");",
                  "    tests[\"Body contains 'street'\"] = jsonData.shipToInformation.hasOwnProperty(\"street\");",
                  "    tests[\"Body contains 'city'\"] = jsonData.shipToInformation.hasOwnProperty(\"city\");",
                  "    tests[\"Body contains 'state'\"] = jsonData.shipToInformation.hasOwnProperty(\"state\");",
                  "    tests[\"Body contains 'countryLetterCode'\"] = jsonData.shipToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "    tests[\"Body contains 'postalCode'\"] = jsonData.shipToInformation.hasOwnProperty(\"postalCode\");",
                  "    tests[\"Body contains 'email'\"] = jsonData.shipToInformation.hasOwnProperty(\"email\");",
                  "    tests[\"Body contains 'phoneNumber'\"] = jsonData.shipToInformation.hasOwnProperty(\"phoneNumber\");",
                  "    tests[\"Body contains 'latitude'\"] = jsonData.shipToInformation.hasOwnProperty(\"latitude\");",
                  "    tests[\"Body contains 'longitude'\"] = jsonData.shipToInformation.hasOwnProperty(\"longitude\");",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"imveCommOrderLines\"))",
                  "{",
                  "    jsonData.imveCommOrderLines.forEach(function(param){",
                  "        tests[\"Body contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "        tests[\"Ids are the same\"] = id === param.documentId;",
                  "        tests[\"Body contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "        tests[\"Body contains 'lineType'\"] = param.hasOwnProperty(\"lineType\");",
                  "        tests[\"Body contains 'number'\"] = param.hasOwnProperty(\"number\");",
                  "        tests[\"Body contains 'displayName'\"] = param.hasOwnProperty(\"displayName\");",
                  "        tests[\"Body contains 'displayNameInLocalLanguage'\"] = param.hasOwnProperty(\"displayNameInLocalLanguage\");",
                  "        tests[\"Body contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "        tests[\"Body contains 'unitPrice'\"] = param.hasOwnProperty(\"unitPrice\");",
                  "        tests[\"Body contains 'unitPriceIncludingTax'\"] = param.hasOwnProperty(\"unitPriceIncludingTax\");",
                  "        tests[\"Body contains 'taxPercent'\"] = param.hasOwnProperty(\"taxPercent\");",
                  "        tests[\"Body contains 'netAmount'\"] = param.hasOwnProperty(\"netAmount\");",
                  "        tests[\"Body contains 'netAmountIncludingTax'\"] = param.hasOwnProperty(\"netAmountIncludingTax\");",
                  "        tests[\"Body contains 'note'\"] = param.hasOwnProperty(\"note\");",
                  "    })",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"imveCommOrderServices\"))",
                  "{",
                  "    jsonData.imveCommOrderServices.forEach(function(param){",
                  "        tests[\"Body contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "        tests[\"Ids are the same\"] = id === param.documentId;",
                  "        tests[\"Body contains 'reservationID'\"] = param.hasOwnProperty(\"reservationID\");",
                  "        tests[\"Body contains 'serviceProductNo'\"] = param.hasOwnProperty(\"serviceProductNo\");",
                  "        tests[\"Body contains 'timeslotNo'\"] = param.hasOwnProperty(\"timeslotNo\");",
                  "        tests[\"Body contains 'price'\"] = param.hasOwnProperty(\"price\");",
                  "        tests[\"Body contains 'priceIncludingTax'\"] = param.hasOwnProperty(\"priceIncludingTax\");",
                  "        tests[\"Body contains 'priceCalcMethod'\"] = param.hasOwnProperty(\"priceCalcMethod\");",
                  "        tests[\"Body contains 'date'\"] = param.hasOwnProperty(\"date\");",
                  "        tests[\"Body contains 'starttime'\"] = param.hasOwnProperty(\"starttime\");",
                  "        tests[\"Body contains 'endtime'\"] = param.hasOwnProperty(\"endtime\");",
                  "        tests[\"Body contains 'capacityunit'\"] = param.hasOwnProperty(\"capacityunit\");",
                  "        tests[\"Body contains 'capacity'\"] = param.hasOwnProperty(\"capacity\");",
                  "        tests[\"Body contains 'serviceProviderNo'\"] = param.hasOwnProperty(\"serviceProviderNo\");",
                  "    })",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"imveCommServiceOrderItems\"))",
                  "{",
                  "    jsonData.imveCommServiceOrderItems.forEach(function(param){",
                  "        tests[\"Body contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "        tests[\"Ids are the same\"] = id === param.documentId;",
                  "        tests[\"Body contains 'reservationID'\"] = param.hasOwnProperty(\"reservationID\");",
                  "        tests[\"Body contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "        tests[\"Body contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "        tests[\"Body contains 'relatedItemSequenceNo'\"] = param.hasOwnProperty(\"relatedItemSequenceNo\");",
                  "    })",
                  "}",
                  "",
                  "if (jsonData.hasOwnProperty(\"imveCommPayments\"))",
                  "{",
                  "    jsonData.imveCommPayments.forEach(function(param){",
                  "        tests[\"Body contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
                  "        tests[\"Ids are the same\"] = id === param.documentId;",
                  "        tests[\"Body contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "        tests[\"Body contains 'referenceId'\"] = param.hasOwnProperty(\"referenceId\");",
                  "        tests[\"Body contains 'date'\"] = param.hasOwnProperty(\"date\");",
                  "        tests[\"Body contains 'type'\"] = param.hasOwnProperty(\"type\");",
                  "        tests[\"Body contains 'currencyCode'\"] = param.hasOwnProperty(\"currencyCode\");",
                  "        tests[\"Body contains 'amount'\"] = param.hasOwnProperty(\"amount\");",
                  "        tests[\"Body contains 'document'\"] = param.hasOwnProperty(\"document\");",
                  "    })",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\t\"eCommOrderNo\": \"IRW80951\",\r\t\"orderDate\": \"2018-08-29\",\r\t\"orderTime\": \"11:52:34\",\r\t\"storeNo\": \"235\",\r\t\"eCommCustomerNo\": \"VR\",\r\t\"sellToInformation\": {\r    \t\"name\": \"Jens Johnsson\",\r    \t\"name2\": \"Mr\",\r    \t\"street\": \"WayToShip 100\",\r    \t\"street2\": \"-\",\r    \t\"city\": \"Manama\",\r    \t\"postalCode\": \"1000\",\r    \t\"state\": \"Lithuania\",\r    \t\"countryLetterCode\": \"LT\",\r    \t\"phoneNumber\": \"1234\",\r    \t\"email\": \"someone@nowhere.net\"\r\t},\r\t\"billToInformation\": {\r    \t\"name\": \"Jens Johnsson2\",\r    \t\"name2\": \"Mr&Mrs \\\"Smith\\\"\",\r    \t\"street\": \"WayToShip 1002\",\r    \t\"street2\": \"-\",\r    \t\"city\": \"Manama\",\r    \t\"postalCode\": \"1000\",\r    \t\"state\": \"LT\",\r    \t\"countryLetterCode\": \"LT\",\r    \t\"phoneNumber\": \"2345\",\r    \t\"email\": \"someone2@nowhere.net\"\r\t},\r\t\"shipToInformation\": {\r    \t\"name\": \"Jens Johnsson3\",\r    \t\"name2\": \"Mr3\",\r    \t\"street\": \"WayToShip 1003\",\r    \t\"street2\": \"-\",\r    \t\"city\": \"Manama\",\r    \t\"postalCode\": \"1000\",\r    \t\"state\": \"LT\",\r    \t\"countryLetterCode\": \"LT\",\r    \t\"phoneNumber\": \"3456\",\r    \t\"email\": \"someone3@nowhere.net\",\r    \t\"latitude\": 4.4071,\r    \t\"longitude\": 52.0516\r\t},\r\t\"note\": \"PrintComment xml Order\",\r\t\"customerLanguage\": \"EN\",\r\t\"imveCommOrderLines\": [\r    \t{\r    \t\t\"sequence\": 1,\r    \t\t\"lineType\": \"Item\",\r    \t\t\"number\": \"20205449\",\r    \t\t\"displayName\": \"(The best used item ever) HAGGEBY DOOR 60X60 WHITE\",\r    \t\t\"displayNameInLocalLanguage\": \"very 'Local\\\" description\",\r    \t\t\"quantity\": 3.0,\r    \t\t\"unitPrice\": 5.78512,\r    \t\t\"unitPriceIncludingTax\": 7.0,\r    \t\t\"netAmount\": 17.36,\r    \t\t\"netAmountIncludingTax\": 21.0,\r    \t\t\"note\": \"bebeb\\\"\\/\\\\12345\"\r    \t},\r    \t{\r    \t\t\"sequence\": 2,\r    \t\t\"lineType\": \"SPR\",\r    \t\t\"number\": \"89041709\",\r    \t\t\"displayName\": \"ANTILOP N HIGHCHR W SAFETY BELT WHI\\/SILVER-COLOUR\",\r    \t\t\"displayNameInLocalLanguage\": \"ANTILOP N DESCR. 2\",\r    \t\t\"quantity\": 2.0,\r    \t\t\"unitPrice\": 8.2562,\r    \t\t\"unitPriceIncludingTax\": 9.99,\r    \t\t\"netAmount\": 16.51,\r    \t\t\"netAmountIncludingTax\": 19.98,\r    \t\t\"note\": \"\"\r    \t},\r    \t{\r    \t\t\"sequence\": 3,\r    \t\t\"lineType\": \"Item\",\r    \t\t\"number\": \"20228766\",\r    \t\t\"displayName\": \"TUTEMO WLL CB 40X37X20 WHITE\\/GREY\",\r    \t\t\"displayNameInLocalLanguage\": \"\",\r    \t\t\"quantity\": 1.0,\r    \t\t\"unitPrice\": 22.0,\r    \t\t\"unitPriceIncludingTax\": 22.0,\r    \t\t\"netAmount\": 22.0,\r    \t\t\"netAmountIncludingTax\": 22.0,\r    \t\t\"note\": \"\"\r    \t}\r\t],\r\t\"imveCommOrderServices\": [\r    \t{\r    \t\t\"serviceProviderNo\": \"SERVPROV1500005\",\r    \t\t\"serviceProductNo\": \"40000362\",\r    \t\t\"timeslotNo\": 11019,\r    \t\t\"reservationID\": 80951,\r    \t\t\"price\": 20.66,\r    \t\t\"priceIncludingTax\": 25.0,\r    \t\t\"priceCalcMethod\": \"MANUAL\",\r    \t\t\"bookedDays\": 1,\r    \t\t\"multiSlot\": false,\r    \t\t\"date\": \"2018-09-01\",\r    \t\t\"starttime\": \"10:00:00\",\r    \t\t\"endtime\": \"17:00:00\",\r    \t\t\"capacityunit\": \"TRANSPORT\",\r    \t\t\"capacity\": 1.0\r    \t},\r    \t{\r    \t\t\"serviceProviderNo\": \"SERVPROV1500010\",\r    \t\t\"serviceProductNo\": \"20000532\",\r    \t\t\"timeslotNo\": 12000,\r    \t\t\"reservationID\": 80952,\r    \t\t\"price\": 65.22,\r    \t\t\"priceIncludingTax\": 75.0,\r    \t\t\"priceCalcMethod\": \"FIXED\",\r    \t\t\"bookedDays\": 1,\r    \t\t\"multiSlot\": false,\r    \t\t\"date\": \"2018-09-01\",\r    \t\t\"starttime\": \"10:00:00\",\r    \t\t\"endtime\": \"17:00:00\",\r    \t\t\"capacityunit\": \"M\",\r    \t\t\"capacity\": 1.0\r    \t},\r    \t{\r    \t\t\"serviceProviderNo\": \"SERVPROV1500011\",\r    \t\t\"serviceProductNo\": \"00000137\",\r    \t\t\"timeslotNo\": 14000,\r    \t\t\"reservationID\": 80953,\r    \t\t\"price\": 18.18,\r    \t\t\"priceIncludingTax\": 20.0,\r    \t\t\"priceCalcMethod\": \"FIXED\",\r    \t\t\"bookedDays\": 1,\r    \t\t\"multiSlot\": false,\r    \t\t\"date\": \"2018-09-01\",\r    \t\t\"starttime\": \"10:00:00\",\r    \t\t\"endtime\": \"17:09:00\",\r    \t\t\"capacityunit\": \"Service\",\r    \t\t\"capacity\": 1.0\r    \t}\r\t],\r\t\"imveCommServiceOrderItems\": [\r    \t{\r    \t\t\"sequence\": 1,\r    \t\t\"relatedItemSequenceNo\": 1,\r    \t\t\"reservationID\": 80951,\r    \t\t\"quantity\": 3\r    \t},\r    \t{\r    \t\t\"sequence\": 2,\r    \t\t\"relatedItemSequenceNo\": 2,\r    \t\t\"reservationID\": 80951,\r    \t\t\"quantity\": 2\r    \t},\r    \t{\r    \t\t\"sequence\": 3,\r    \t\t\"relatedItemSequenceNo\": 3,\r    \t\t\"reservationID\": 80951,\r    \t\t\"quantity\": 1\r    \t},\r    \t{\r    \t\t\"sequence\": 4,\r    \t\t\"relatedItemSequenceNo\": 1,\r    \t\t\"reservationID\": 80952,\r    \t\t\"quantity\": 3\r    \t}\r\t],\r\t\"imveCommPayments\": [\r    \t{\r    \t\t\"sequence\": 1,\r    \t\t\"referenceId\": \"abcdefghijklmnopqrstuvwxyz\",\r    \t\t\"date\": \"2018-08-23T11:20:00Z\",\r    \t\t\"type\": \"01\",\r    \t\t\"currencyCode\": \"EUR\",\r    \t\t\"amount\": 182.98,\r    \t\t\"document\": \"WEB0000123\"\r    \t}\r\t]\r}\r"
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}imveCommOrders?$expand=imveCommOrderLines,imveCommOrderServices,imveCommServiceOrderItems,imveCommPayments",
              "host": [
                "{{url}}{{storeCompany}}imveCommOrders"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imveCommOrderLines,imveCommOrderServices,imveCommServiceOrderItems,imveCommPayments"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "0d90b08a-ea67-4040-b853-6c8f45e0145d",
          "name": "AfterSalesOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7df716d-8d97-46cf-8ec6-40e035b683b8",
                "exec": [
                  "console.log('Get imvAfterSalesOrders Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        tests[\"Body contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
                  "        tests[\"Body contains 'id'\"] =  param.hasOwnProperty(\"id\");",
                  "        tests[\"Body contains 'eCommOrderNo'\"] =  param.hasOwnProperty(\"eCommOrderNo\");",
                  "        tests[\"Body contains 'storeNo'\"] =  param.hasOwnProperty(\"storeNo\");",
                  "        tests[\"Body contains 'eCommCustomerNo'\"] =  param.hasOwnProperty(\"eCommCustomerNo\");",
                  "        tests[\"Body contains 'note'\"] =  param.hasOwnProperty(\"note\");",
                  "        tests[\"Body contains 'sellToInformation'\"] =  param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'sellToInformation'\"] = param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'billToInformation'\"] = param.hasOwnProperty(\"billToInformation\");",
                  "        tests[\"Body contains 'shipToInformation'\"] = param.hasOwnProperty(\"shipToInformation\");",
                  "        tests[\"Body contains 'imvAfterSalesOrderLines@odata.context'\"] = param.hasOwnProperty(\"imvAfterSalesOrderLines@odata.context\");",
                  "        tests[\"Body contains 'imvAfterSalesOrderLines'\"] = param.hasOwnProperty(\"imvAfterSalesOrderLines\");",
                  "        if (param.hasOwnProperty(\"sellToInformation\"))",
                  "        {",
                  "            tests[\"sellToInformation contains 'name'\"] = param.sellToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"sellToInformation contains 'street'\"] = param.sellToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"sellToInformation contains 'city'\"] = param.sellToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"sellToInformation contains 'state'\"] = param.sellToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"sellToInformation contains 'countryLetterCode'\"] = param.sellToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"sellToInformation contains 'postalCode'\"] = param.sellToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"sellToInformation contains 'email'\"] = param.sellToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"sellToInformation contains 'phoneNumber'\"] = param.sellToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"billToInformation\"))",
                  "        {",
                  "            tests[\"billToInformation contains 'name'\"] = param.billToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"billToInformation contains 'street'\"] = param.billToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"billToInformation contains 'city'\"] = param.billToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"billToInformation contains 'state'\"] = param.billToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"billToInformation contains 'countryLetterCode'\"] = param.billToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"billToInformation contains 'postalCode'\"] = param.billToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"billToInformation contains 'email'\"] = param.billToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"billToInformation contains 'phoneNumber'\"] = param.billToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"shipToInformation\"))",
                  "        {",
                  "            tests[\"shipToInformation contains 'name'\"] = param.shipToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"shipToInformation contains 'street'\"] = param.shipToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"shipToInformation contains 'city'\"] = param.shipToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"shipToInformation contains 'state'\"] = param.shipToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"shipToInformation contains 'countryLetterCode'\"] = param.shipToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"shipToInformation contains 'postalCode'\"] = param.shipToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"shipToInformation contains 'email'\"] = param.shipToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"shipToInformation contains 'phoneNumber'\"] = param.shipToInformation.hasOwnProperty(\"phoneNumber\");",
                  "            tests[\"shipToInformation contains 'latitude'\"] = param.shipToInformation.hasOwnProperty(\"latitude\");",
                  "            tests[\"shipToInformation contains 'longitude'\"] = param.shipToInformation.hasOwnProperty(\"longitude\");",
                  "        }",
                  "        if (param.hasOwnProperty(\"imvAfterSalesOrderLines\"))",
                  "        {",
                  "            param.imvAfterSalesOrderLines.forEach(function(param){",
                  "                tests[\"imvAfterSalesOrderLines contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'documentNumber'\"] = param.hasOwnProperty(\"documentNumber\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'lineType'\"] = param.hasOwnProperty(\"lineType\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'number'\"] = param.hasOwnProperty(\"number\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'displayName'\"] = param.hasOwnProperty(\"displayName\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'displayNameInLocalLanguage'\"] = param.hasOwnProperty(\"displayNameInLocalLanguage\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'unitPrice'\"] = param.hasOwnProperty(\"unitPrice\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'unitPriceIncludingTax'\"] = param.hasOwnProperty(\"unitPriceIncludingTax\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'taxPercent'\"] = param.hasOwnProperty(\"taxPercent\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'netAmount'\"] = param.hasOwnProperty(\"netAmount\");",
                  "                tests[\"imvAfterSalesOrderLines contains 'netAmountIncludingTax'\"] = param.hasOwnProperty(\"netAmountIncludingTax\");",
                  "            })",
                  "        }",
                  "    })",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}/imvAfterSalesOrders?$expand=imvAfterSalesOrderLines",
              "host": [
                "{{url}}{{storeCompany}}"
              ],
              "path": [
                "imvAfterSalesOrders"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvAfterSalesOrderLines"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "bf416b4b-65d1-4cfa-9556-d3b4a758bcc1",
          "name": "ReturnOrders",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7df716d-8d97-46cf-8ec6-40e035b683b8",
                "exec": [
                  "console.log('Get imvSalesReturnOrders Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        tests[\"Body contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
                  "        tests[\"Body contains 'id'\"] =  param.hasOwnProperty(\"id\");",
                  "        tests[\"Body contains 'eCommOrderNo'\"] =  param.hasOwnProperty(\"eCommOrderNo\");",
                  "        tests[\"Body contains 'storeNo'\"] =  param.hasOwnProperty(\"storeNo\");",
                  "        tests[\"Body contains 'eCommCustomerNo'\"] =  param.hasOwnProperty(\"eCommCustomerNo\");",
                  "        tests[\"Body contains 'note'\"] =  param.hasOwnProperty(\"note\");",
                  "        tests[\"Body contains 'sellToInformation'\"] =  param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'sellToInformation'\"] = param.hasOwnProperty(\"sellToInformation\");",
                  "        tests[\"Body contains 'billToInformation'\"] = param.hasOwnProperty(\"billToInformation\");",
                  "        tests[\"Body contains 'shipToInformation'\"] = param.hasOwnProperty(\"shipToInformation\");",
                  "        tests[\"Body contains 'imvSalesReturnOrderLines@odata.context'\"] = param.hasOwnProperty(\"imvSalesReturnOrderLines@odata.context\");",
                  "        tests[\"Body contains 'imvSalesReturnOrderLines'\"] = param.hasOwnProperty(\"imvSalesReturnOrderLines\");",
                  "        if (param.hasOwnProperty(\"sellToInformation\"))",
                  "        {",
                  "            tests[\"sellToInformation contains 'name'\"] = param.sellToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"sellToInformation contains 'street'\"] = param.sellToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"sellToInformation contains 'city'\"] = param.sellToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"sellToInformation contains 'state'\"] = param.sellToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"sellToInformation contains 'countryLetterCode'\"] = param.sellToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"sellToInformation contains 'postalCode'\"] = param.sellToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"sellToInformation contains 'email'\"] = param.sellToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"sellToInformation contains 'phoneNumber'\"] = param.sellToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"billToInformation\"))",
                  "        {",
                  "            tests[\"billToInformation contains 'name'\"] = param.billToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"billToInformation contains 'street'\"] = param.billToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"billToInformation contains 'city'\"] = param.billToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"billToInformation contains 'state'\"] = param.billToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"billToInformation contains 'countryLetterCode'\"] = param.billToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"billToInformation contains 'postalCode'\"] = param.billToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"billToInformation contains 'email'\"] = param.billToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"billToInformation contains 'phoneNumber'\"] = param.billToInformation.hasOwnProperty(\"phoneNumber\");",
                  "        }",
                  "        ",
                  "        if (param.hasOwnProperty(\"shipToInformation\"))",
                  "        {",
                  "            tests[\"shipToInformation contains 'name'\"] = param.shipToInformation.hasOwnProperty(\"name\");",
                  "            tests[\"shipToInformation contains 'street'\"] = param.shipToInformation.hasOwnProperty(\"street\");",
                  "            tests[\"shipToInformation contains 'city'\"] = param.shipToInformation.hasOwnProperty(\"city\");",
                  "            tests[\"shipToInformation contains 'state'\"] = param.shipToInformation.hasOwnProperty(\"state\");",
                  "            tests[\"shipToInformation contains 'countryLetterCode'\"] = param.shipToInformation.hasOwnProperty(\"countryLetterCode\");",
                  "            tests[\"shipToInformation contains 'postalCode'\"] = param.shipToInformation.hasOwnProperty(\"postalCode\");",
                  "            tests[\"shipToInformation contains 'email'\"] = param.shipToInformation.hasOwnProperty(\"email\");",
                  "            tests[\"shipToInformation contains 'phoneNumber'\"] = param.shipToInformation.hasOwnProperty(\"phoneNumber\");",
                  "            tests[\"shipToInformation contains 'latitude'\"] = param.shipToInformation.hasOwnProperty(\"latitude\");",
                  "            tests[\"shipToInformation contains 'longitude'\"] = param.shipToInformation.hasOwnProperty(\"longitude\");",
                  "        }",
                  "        if (param.hasOwnProperty(\"imvSalesReturnOrderLines\"))",
                  "        {",
                  "            param.imvSalesReturnOrderLines.forEach(function(param){",
                  "                tests[\"imvSalesReturnOrderLines contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'documentNumber'\"] = param.hasOwnProperty(\"documentNumber\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'lineType'\"] = param.hasOwnProperty(\"lineType\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'number'\"] = param.hasOwnProperty(\"number\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'displayName'\"] = param.hasOwnProperty(\"displayName\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'displayNameInLocalLanguage'\"] = param.hasOwnProperty(\"displayNameInLocalLanguage\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'unitPrice'\"] = param.hasOwnProperty(\"unitPrice\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'unitPriceIncludingTax'\"] = param.hasOwnProperty(\"unitPriceIncludingTax\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'taxPercent'\"] = param.hasOwnProperty(\"taxPercent\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'netAmount'\"] = param.hasOwnProperty(\"netAmount\");",
                  "                tests[\"imvSalesReturnOrderLines contains 'netAmountIncludingTax'\"] = param.hasOwnProperty(\"netAmountIncludingTax\");",
                  "            })",
                  "        }",
                  "    })",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}/imvSalesReturnOrders?$expand=imvSalesReturnOrderLines",
              "host": [
                "{{url}}{{storeCompany}}"
              ],
              "path": [
                "imvSalesReturnOrders"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvSalesReturnOrderLines"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "ffc3e135-08a3-4325-8284-b4a2c9457b93",
      "name": "Service",
      "description": null,
      "item": [
        {
          "_postman_id": "7018d0e0-0fc5-4b7c-8519-aedea29d012d",
          "name": "ServicePricePeriods",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e8e6a669-02dc-4b62-aae1-e5aedd5b314b",
                "exec": [
                  "console.log('imvServicePricePeriods Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentServicePricePeriodEntryIDMissed, contentServiceNumberMissed, contentSellingFromStoreMissed, contentSellingToAreaMissed, contentStartDateMissed, contentEndDateMissed, contentBasePriceTypeMissed, contentBasePriceMissed, contentPriceCalculationMethodMissed, contentPriceMissed, contentLastDateTimeModifiedMissed, contentImvServicePriceIntervalsMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"servicePricePeriodEntryID\"))",
                  "            contentServicePricePeriodEntryIDMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceNumber\"))",
                  "            contentServiceNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"sellingFromStore\"))",
                  "            contentSellingFromStoreMissed = true;",
                  "        if(!param.hasOwnProperty(\"sellingToArea\"))",
                  "            contentSellingToAreaMissed = true;",
                  "        if(!param.hasOwnProperty(\"startDate\"))",
                  "            contentStartDateMissed = true;   ",
                  "        if(!param.hasOwnProperty(\"endDate\"))",
                  "            contentEndDateMissed = true;",
                  "        if(!param.hasOwnProperty(\"basePriceType\"))",
                  "            contentBasePriceTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"basePrice\"))",
                  "            contentBasePriceMissed = true;",
                  "        if(!param.hasOwnProperty(\"priceCalculationMethod\"))",
                  "            contentPriceCalculationMethodMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceNumber\"))",
                  "            contentServiceNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"price\"))",
                  "            contentPriceMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastDateTimeModified\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvServicePriceIntervals\"))",
                  "            contentImvServicePriceIntervalsMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentServicePricePeriodEntryIDMissed = contentServiceNumberMissed = contentSellingFromStoreMissed = contentSellingToAreaMissed = contentStartDateMissed = contentEndDateMissed = contentBasePriceTypeMissed = contentBasePriceMissed = contentPriceCalculationMethodMissed = contentPriceMissed = contentLastDateTimeModifiedMissed = contentImvServicePriceIntervalsMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'servicePricePeriodEntryID'\"] = !contentServicePricePeriodEntryIDMissed;",
                  "tests[\"Body contains 'serviceNumber'\"] = !contentServiceNumberMissed;",
                  "tests[\"Body contains 'sellingFromStore'\"] = !contentSellingFromStoreMissed;",
                  "tests[\"Body contains 'sellingToArea'\"] = !contentSellingToAreaMissed;",
                  "tests[\"Body contains 'startDate'\"] = !contentStartDateMissed;",
                  "tests[\"Body contains 'endDate'\"] = !contentEndDateMissed;",
                  "tests[\"Body contains 'basePriceType'\"] = !contentBasePriceTypeMissed;",
                  "tests[\"Body contains 'basePrice'\"] = !contentBasePriceMissed;",
                  "tests[\"Body contains 'priceCalculationMethod'\"] = !contentPriceCalculationMethodMissed;",
                  "tests[\"Body contains 'price'\"] = !contentPriceMissed;",
                  "tests[\"Body contains 'lastDateTimeModified'\"] = !contentLastDateTimeModifiedMissed;",
                  "tests[\"Body contains 'imvServicePriceIntervals'\"] = !contentImvServicePriceIntervalsMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvServicePricePeriods?$expand=imvServicePriceIntervals",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvServicePricePeriods"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvServicePriceIntervals"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a776f4b4-886c-4889-aea7-a14c00e7bb68",
          "name": "ServicePriceCalcMethods",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "377913af-64ad-4428-a684-38e71f9102ce",
                "exec": [
                  "console.log('imvServicePriceCalcMethods Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentCodeMissed, contentDisplayNameMissed, contentTypeMissed, contentPricedInIntervalsMissed, contentSalesMethodFilterMissed, contentPricingCapacityUnitMissed, contentLastDateTimeModifiedMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"code\"))",
                  "            contentCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"type\"))",
                  "            contentTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"pricedInIntervals\"))",
                  "            contentPricedInIntervalsMissed = true;",
                  "        if(!param.hasOwnProperty(\"salesMethodFilter\"))",
                  "            contentSalesMethodFilterMissed = true;",
                  "        if(!param.hasOwnProperty(\"pricingCapacityUnit\"))",
                  "            contentPricingCapacityUnitMissed = true;    ",
                  "        if(!param.hasOwnProperty(\"lastDateTimeModified\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentCodeMissed = contentDisplayNameMissed = contentTypeMissed = contentPricedInIntervalsMissed = contentSalesMethodFilterMissed = contentPricingCapacityUnitMissed = contentLastDateTimeModifiedMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'code'\"] = !contentCodeMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'type'\"] = !contentTypeMissed;",
                  "tests[\"Body contains 'pricedInIntervals'\"] = !contentPricedInIntervalsMissed;",
                  "tests[\"Body contains 'salesMethodFilter'\"] = !contentSalesMethodFilterMissed;",
                  "tests[\"Body contains 'pricingCapacityUnit'\"] = !contentPricingCapacityUnitMissed;",
                  "tests[\"Body contains 'lastDateTimeModified'\"] = !contentLastDateTimeModifiedMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}{{serviceOfficeCompany}}imvServicePriceCalcMethods"
          },
          "response": []
        },
        {
          "_postman_id": "bb213292-dc69-491a-9b7d-0b07f50f782f",
          "name": "ServicePostCodes",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7828b6b4-8808-40f4-9435-6f4def668a14",
                "exec": [
                  "console.log('imvPostCodeServiceLinks Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentServiceProductNoMissed, contentCapacityAreaCodeMissed, contentImvServiceCapacityPostCodesMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceProductNo\"))",
                  "            contentServiceProductNoMissed = true;",
                  "        if(!param.hasOwnProperty(\"capacityAreaCode\"))",
                  "            contentCapacityAreaCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvServiceCapacityPostCodes\"))",
                  "            contentImvServiceCapacityPostCodesMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentServiceProductNoMissed = contentCapacityAreaCodeMissed = contentImvServiceCapacityPostCodesMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'serviceProductNo'\"] = !contentServiceProductNoMissed;",
                  "tests[\"Body contains 'capacityAreaCode'\"] = !contentCapacityAreaCodeMissed;",
                  "tests[\"Body contains 'imvServiceCapacityPostCodes'\"] = !contentImvServiceCapacityPostCodesMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks/?$expand=imvServiceCapacityPostCodes",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks"
              ],
              "path": [
                ""
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvServiceCapacityPostCodes"
                }
              ]
            }
          },
          "response": [
            {
              "id": "298594eb-7a40-424e-b9c7-6c524b1eefe4",
              "name": "ServicePostCodes",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks/?$expand=imvServiceCapacityPostCodes&$filter=serviceProductNo eq '30000517'",
                  "host": [
                    "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks"
                  ],
                  "path": [
                    ""
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "imvServiceCapacityPostCodes"
                    },
                    {
                      "key": "$filter",
                      "value": "serviceProductNo eq '30000517'"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Length",
                  "value": "16574"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; odata.metadata=minimal"
                },
                {
                  "key": "Server",
                  "value": "Microsoft-HTTPAPI/2.0"
                },
                {
                  "key": "request-id",
                  "value": "6c84c580-c389-43e9-b25e-a46d1d6f32e2"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Date"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Content-Length"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Server"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "OData-Version"
                },
                {
                  "key": "OData-Version",
                  "value": "4.0"
                },
                {
                  "key": "Date",
                  "value": "Fri, 02 Nov 2018 16:02:41 GMT"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks\",\n    \"value\": [\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RBQU1BQXdBREFBTUFBeEFETUFOd0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"00000137\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='00000137',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFETUFNZ0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"20000532\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='20000532',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFEWUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"20000565\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='20000565',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQ4O2gxa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKNy8wRUFBQUFBQUE9PTE7MDA7Jw==\\\"\",\n            \"serviceProductNo\": \"30000517\",\n            \"capacityAreaCode\": \"A\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='30000517',capacityAreaCode='A')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzBFQUFBQUNlLzh4QURBQU1BQXdBQ0FBVWdCQkFBQUFBQUE9MTE7MTM1ODQ2MzA0MTkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"1000 RA\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzBFQUFBQUNlLzh4QURjQU13QTBBQ0FBU2dCQkFBQUFBQUE9MTE7MTM1ODQ2MzA0MzMwOyc=\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"1734 JA\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQwO2oxa0JBQUo3LzBFQUFBQUNld1V4QURrQU9RQTVBRGtBQUFBQUFBPT0xMTsxMzU5MjIwNDE5ODA7Jw==\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"19999\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"30000517\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='30000517',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RRQU1BQXdBREFBTUFBekFEWUFNZ0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"40000362\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='40000362',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RZQU1BQXdBREFBTUFBMUFESUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"60000525\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='60000525',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RnQU1BQXdBREFBTUFBMUFESUFPUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"80000529\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='80000529',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RnQU1BQXdBREFBT1FBMUFERUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"80009515\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='80009515',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBekFEa0FBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00039\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00039',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFEQUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00040\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00040',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFERUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00041\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00041',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFESUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00042\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00042',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFETUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00043\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00043',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMUFEUUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00054\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00054',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQ0O2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85QkFBQUFBQUE9MTswMDsn\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"A\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='A')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzBFQUFBQUNlLzh4QURBQU1BQXdBQ0FBVWdCQkFBQUFBQUE9MTE7MTM1ODQ2MzA0MTkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"1000 RA\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzBFQUFBQUNlLzh4QURjQU13QTBBQ0FBU2dCQkFBQUFBQUE9MTE7MTM1ODQ2MzA0MzMwOyc=\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"1734 JA\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQwO2oxa0JBQUo3LzBFQUFBQUNld1V4QURrQU9RQTVBRGtBQUFBQUFBPT0xMTsxMzU5MjIwNDE5ODA7Jw==\\\"\",\n                    \"capacityAreaCode\": \"A\",\n                    \"postCode\": \"19999\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzYwO2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85REFFVUFUZ0JVQUZJQVFRQk1BQUFBQUFBPTE7MDA7Jw==\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"CENTRAL\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='CENTRAL')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": []\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceCapacityPostCodes@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='NORTH')/imvServiceCapacityPostCodes\",\n            \"imvServiceCapacityPostCodes\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCREVBTUFBd0FEQUFBQUFBQUE9PTExOzEyOTEzOTg4ODU0MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"1000\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdCVEVBT1FBNUFEa0FPUUFBQUFBQTExOzEzNTkyMjAzNzk5MDsn\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"19999\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ0O2oxa0JBQUo3LzA0QVR3QlNBRlFBU0FBQUFBSjdBelVBTlFBMUFBQUFBQUE9MTE7MTM2MDMyMzUwNjkwOyc=\\\"\",\n                    \"capacityAreaCode\": \"NORTH\",\n                    \"postCode\": \"555\"\n                }\n            ]\n        }\n    ]\n}"
            }
          ]
        },
        {
          "_postman_id": "931ef35e-d0df-4fac-b1da-38b064fe597b",
          "name": "ServiceStores",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "78ecc15e-ebe5-4df2-b122-25c874e1f13b",
                "exec": [
                  "console.log('imvImvServiceProductStores Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentServiceProductNoMissed, contentCapacityAreaCodeMissed, contentImvServiceProductStoresMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceProductNo\"))",
                  "            contentServiceProductNoMissed = true;",
                  "        if(!param.hasOwnProperty(\"capacityAreaCode\"))",
                  "            contentCapacityAreaCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvServiceProductStores\"))",
                  "            contentImvServiceProductStoresMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentServiceProductNoMissed = contentCapacityAreaCodeMissed = contentImvServiceProductStoresMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'serviceProductNo'\"] = !contentServiceProductNoMissed;",
                  "tests[\"Body contains 'capacityAreaCode'\"] = !contentCapacityAreaCodeMissed;",
                  "tests[\"Body contains 'imvServiceProductStores'\"] = !contentImvServiceProductStoresMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks?$expand=imvServiceProductStores",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvServiceProductStores"
                }
              ]
            }
          },
          "response": [
            {
              "id": "40a2c528-3fb1-4852-8515-fb147563fbd0",
              "name": "ServiceStores with filter on storeNo",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic dGVzdHVzZXI6UEBzc3dvcmQwMQ=="
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks?$expand=imvServiceProductStores($filter=(storeNo eq '235'))",
                  "host": [
                    "{{url}}{{serviceOfficeCompany}}imvPostCodeServiceLinks"
                  ],
                  "query": [
                    {
                      "key": "$expand",
                      "value": "imvServiceProductStores($filter=(storeNo eq '235'))"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Length",
                  "value": "13550"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; odata.metadata=minimal"
                },
                {
                  "key": "Server",
                  "value": "Microsoft-HTTPAPI/2.0"
                },
                {
                  "key": "request-id",
                  "value": "78f0dc3e-c21d-4b2e-b132-a0c2225f08d4"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Date"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Content-Length"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Server"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "OData-Version"
                },
                {
                  "key": "OData-Version",
                  "value": "4.0"
                },
                {
                  "key": "Date",
                  "value": "Fri, 02 Nov 2018 16:05:28 GMT"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks\",\n    \"value\": [\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RBQU1BQXdBREFBTUFBeEFETUFOd0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"00000137\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='00000137',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RBQU1BQXdBREFBTUFBeEFETUFOd0FBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMzU4MDc5OTM0NzA7Jw==\\\"\",\n                    \"serviceProductNo\": \"00000137\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RBQU1BQXdBREFBTUFBeEFETUFOd0FBQUFKN0F6Z0FPQUE0QUFBQUFBQT0xMTsxMzU4MDc5OTY4MDA7Jw==\\\"\",\n                    \"serviceProductNo\": \"00000137\",\n                    \"storeNo\": \"888\",\n                    \"storeName\": \"Second Store\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RBQU1BQXdBREFBTUFBeEFETUFOd0FBQUFKN0F6a0FPUUE1QUFBQUFBQT0xMTsxMzU4MDc5OTY3NDA7Jw==\\\"\",\n                    \"serviceProductNo\": \"00000137\",\n                    \"storeNo\": \"999\",\n                    \"storeName\": \"Central Unit\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFETUFNZ0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"20000532\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='20000532',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFETUFNZ0FBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxNTQ3NjM1MDA7Jw==\\\"\",\n                    \"serviceProductNo\": \"20000532\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFEWUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"20000565\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='20000565',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RJQU1BQXdBREFBTUFBMUFEWUFOUUFBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxMzk3OTU4MjA7Jw==\\\"\",\n                    \"serviceProductNo\": \"20000565\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQ4O2gxa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKNy8wRUFBQUFBQUE9PTE7MDA7Jw==\\\"\",\n            \"serviceProductNo\": \"30000517\",\n            \"capacityAreaCode\": \"A\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='30000517',capacityAreaCode='A')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxMzk3OTQ5NTA7Jw==\\\"\",\n                    \"serviceProductNo\": \"30000517\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"30000517\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='30000517',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RNQU1BQXdBREFBTUFBMUFERUFOd0FBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxMzk3OTQ5NTA7Jw==\\\"\",\n                    \"serviceProductNo\": \"30000517\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RRQU1BQXdBREFBTUFBekFEWUFNZ0FBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"40000362\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='40000362',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RRQU1BQXdBREFBTUFBekFEWUFNZ0FBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjgwNDc4Mzk5OTA7Jw==\\\"\",\n                    \"serviceProductNo\": \"40000362\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RZQU1BQXdBREFBTUFBMUFESUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"60000525\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='60000525',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RZQU1BQXdBREFBTUFBMUFESUFOUUFBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjg0NTQwNzI1MTA7Jw==\\\"\",\n                    \"serviceProductNo\": \"60000525\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzY0O1Vsa0JBQUo3Q0RZQU1BQXdBREFBTUFBMUFESUFOUUFBQUFKNy96SUFNd0ExQUY4QVNRQkdBRUlBQUFBQUFBPT0xMTsxMzcyODI5MjQ3MDA7Jw==\\\"\",\n                    \"serviceProductNo\": \"60000525\",\n                    \"storeNo\": \"235_IFB\",\n                    \"storeName\": \"IKEA IF&B Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RnQU1BQXdBREFBTUFBMUFESUFPUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"80000529\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='80000529',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RnQU1BQXdBREFBTUFBMUFESUFPUUFBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxNTQ3ODEyMTA7Jw==\\\"\",\n                    \"serviceProductNo\": \"80000529\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3Q0RnQU1BQXdBREFBT1FBMUFERUFOUUFBQUFKNy8wNEFUd0JTQUZRQVNBQUFBQUFBMTswMDsn\\\"\",\n            \"serviceProductNo\": \"80009515\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='80009515',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzUyO1Vsa0JBQUo3Q0RnQU1BQXdBREFBT1FBMUFERUFOUUFBQUFKN0F6SUFNd0ExQUFBQUFBQT0xMTsxMjkxMzk3OTM0MDA7Jw==\\\"\",\n                    \"serviceProductNo\": \"80009515\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBekFEa0FBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00039\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00039',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBekFEa0FBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDQ1ODQzMjc4MDsn\\\"\",\n                    \"serviceProductNo\": \"S-00039\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFEQUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00040\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00040',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFEQUFBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDQ2MDgxOTg4MDsn\\\"\",\n                    \"serviceProductNo\": \"S-00040\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFERUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00041\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00041',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFERUFBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDQ2MDgzMDQ3MDsn\\\"\",\n                    \"serviceProductNo\": \"S-00041\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFESUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00042\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00042',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFESUFBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDQ2MTgxNjY5MDsn\\\"\",\n                    \"serviceProductNo\": \"S-00042\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFETUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00043\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00043',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBMEFETUFBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDQ2MTgyNzU3MDsn\\\"\",\n                    \"serviceProductNo\": \"S-00043\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFNQUxRQXdBREFBTUFBMUFEUUFBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"S-00054\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='S-00054',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFNQUxRQXdBREFBTUFBMUFEUUFBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNzQ1OTI3MzUzMDsn\\\"\",\n                    \"serviceProductNo\": \"S-00054\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzQ0O2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85QkFBQUFBQUE9MTswMDsn\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"A\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='A')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDUyNTI4NjUxMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNNEFEZ0FPQUFBQUFBQTExOzEzNDUyNTI4NjUzMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"888\",\n                    \"storeName\": \"Second Store\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85RkFFTUFUd0FBQUFBQTExOzEzNzk2NzIyMTE2MDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"ECO\",\n                    \"storeName\": \"Ecommerce store\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzYwO2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85REFFVUFUZ0JVQUZJQVFRQk1BQUFBQUFBPTE7MDA7Jw==\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"CENTRAL\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='CENTRAL')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDUyNTI4NjUxMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNNEFEZ0FPQUFBQUFBQTExOzEzNDUyNTI4NjUzMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"888\",\n                    \"storeName\": \"Second Store\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85RkFFTUFUd0FBQUFBQTExOzEzNzk2NzIyMTE2MDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"ECO\",\n                    \"storeName\": \"Ecommerce store\"\n                }\n            ]\n        },\n        {\n            \"@odata.etag\": \"W/\\\"JzU2O2gxa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85T0FFOEFVZ0JVQUVnQUFBQUFBQT09MTswMDsn\\\"\",\n            \"serviceProductNo\": \"WO_PICK\",\n            \"capacityAreaCode\": \"NORTH\",\n            \"imvServiceProductStores@odata.context\": \"https://mvxtesting.k3devops.nl:7048/NAV/api/beta/$metadata#companies(7a0a1d59-d95f-4eb0-a79b-8f59de17de08)/imvPostCodeServiceLinks(serviceProductNo='WO_PICK',capacityAreaCode='NORTH')/imvServiceProductStores\",\n            \"imvServiceProductStores\": [\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNeUFETUFOUUFBQUFBQTExOzEzNDUyNTI4NjUxMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"235\",\n                    \"storeName\": \"IKEA Store Vilnius\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZXdNNEFEZ0FPQUFBQUFBQTExOzEzNDUyNTI4NjUzMDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"888\",\n                    \"storeName\": \"Second Store\"\n                },\n                {\n                    \"@odata.etag\": \"W/\\\"JzQ4O1Vsa0JBQUo3LzFjQVR3QmZBRkFBU1FCREFFc0FBQUFDZS85RkFFTUFUd0FBQUFBQTExOzEzNzk2NzIyMTE2MDsn\\\"\",\n                    \"serviceProductNo\": \"WO_PICK\",\n                    \"storeNo\": \"ECO\",\n                    \"storeName\": \"Ecommerce store\"\n                }\n            ]\n        }\n    ]\n}"
            }
          ]
        },
        {
          "_postman_id": "b0976899-1c73-4401-9808-fda16e3c1f34",
          "name": "ServiceProducts",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44abb9b1-0665-4217-8c98-1f90e79501ef",
                "exec": [
                  "console.log('imvServiceProducts Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, ",
                  "    contentIdMissed, ",
                  "    contentNumberMissed,",
                  "    contentTypeMissed, ",
                  "\tcontentDisplayNameMissed, ",
                  "\tcontentLastModifiedDateTimeMissed,",
                  "    contentImvServiceProductsMissed, ",
                  "\tcontentImvServiceStoresMissed, ",
                  "\tcontentImvSericeItemsMissed,",
                  "\tcontentEnabledMissed,",
                  "\tcontentStartDateMissed,",
                  "\tcontentEndDateMissed,",
                  "\tcontentCapacityUnitMissed,",
                  "\tcontentNoItemLinkMissed ;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"number\"))",
                  "            contentNumberMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"type\"))",
                  "            contentTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"displayName\"))",
                  "            contentDisplayNameMissed = true;",
                  "        if(!param.hasOwnProperty(\"salesStartDate\"))",
                  "            contentStartDateMissed = true;",
                  "\t\tif(!param.hasOwnProperty(\"endStartDate\"))",
                  "            contentEndDateMissed = true;",
                  "\t\tif(!param.hasOwnProperty(\"enabled\"))",
                  "            contentEnabledMissed = true;",
                  "\t\tif(!param.hasOwnProperty(\"capacityUnit\"))",
                  "            contentCapacityUnitMissed = true;",
                  "\t\tif(!param.hasOwnProperty(\"noItemLink\"))",
                  "            contentNoItemLinkMissed = true;",
                  "        if(!param.hasOwnProperty(\"lastModifiedDateTime\"))",
                  "            contentLastModifiedDateTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvServiceStores\"))",
                  "            contentImvServiceStoresMissed = true;",
                  "\t\tif(!param.hasOwnProperty(\"imvServiceItems\"))",
                  "            contentImvSericeItemsMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = ",
                  "    contentIdMissed = ",
                  "    contentNumberMissed = ",
                  "    contentTypeMissed = ",
                  "\tcontentDisplayNameMissed = ",
                  "\tcontentLastModifiedDateTimeMissed = ",
                  "    contentImvServiceProductsMissed = ",
                  "\tcontentImvServiceStoresMissed = ",
                  "\tcontentImvSericeItemsMissed = ",
                  "\tcontentEnabledMissed = ",
                  "\tcontentStartDateMissed = ",
                  "\tcontentEndDateMissed = ",
                  "\tcontentCapacityUnitMissed = ",
                  "\tcontentNoItemLinkMissed =",
                  "    true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'number'\"] = !contentNumberMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'type'\"] = !contentTypeMissed;",
                  "tests[\"Body contains 'displayName'\"] = !contentDisplayNameMissed;",
                  "tests[\"Body contains 'salesStartDate'\"] = !contentStartDateMissed;",
                  "tests[\"Body contains 'endStartDate'\"] = !contentEndDateMissed;",
                  "tests[\"Body contains 'enabled'\"] = !contentEnabledMissed;",
                  "tests[\"Body contains 'capacityUnit'\"] = !contentCapacityUnitMissed;",
                  "tests[\"Body contains 'noItemLink'\"] = !contentNoItemLinkMissed;",
                  "tests[\"Body contains 'lastModifiedDateTime'\"] = !contentLastModifiedDateTimeMissed;",
                  "tests[\"Body contains 'imvServiceStores'\"] = !contentImvServiceStoresMissed;",
                  "tests[\"Body contains 'imvServiceItems'\"] = !contentImvSericeItemsMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{storeCompany}}imvServiceProducts/?$expand=imvServiceStores,imvServiceItems",
              "host": [
                "{{url}}{{storeCompany}}imvServiceProducts"
              ],
              "path": [
                ""
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvServiceStores,imvServiceItems"
                }
              ]
            },
            "description": "It's main entity describing service products.\r\nService applicable to the webbshop should be linked with e-commerce store. It's described in entity serviceStores\r\nAll services has linked items that this service is applicable for. Except if noItemLink is Yes. In this case service can be sold disregarding what items are in sales order. Good example would be measuring service."
          },
          "response": []
        },
        {
          "_postman_id": "03adf635-bd6a-4191-90fa-920de9a0243f",
          "name": "ServiceOrderStatus",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d11e1dce-0b5d-4f74-a006-193b89690ced",
                "exec": [
                  "console.log('imvServiceOrderStatus Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentserviceOrderNoMissed, contentIdMissed, contentstatusMissed, contentpreviousStatusMissed, contentserviceOrdersByStatusMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceOrderNo\"))",
                  "            contentserviceOrderNoMissed = true;",
                  "        if(!param.hasOwnProperty(\"Id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"status\"))",
                  "            contentstatusMissed = true;",
                  "        if(!param.hasOwnProperty(\"previousStatus\"))",
                  "            contentpreviousStatusMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceOrdersByStatus\"))",
                  "            contentserviceOrdersByStatusMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentserviceOrderNoMissed = contentIdMissed = contentstatusMissed = contentpreviousStatusMissed = contentserviceOrdersByStatusMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'serviceOrderNo'\"] = !contentserviceOrderNoMissed;",
                  "tests[\"Body contains 'Id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'status'\"] = !contentstatusMissed;",
                  "tests[\"Body contains 'previousStatus'\"] = !contentpreviousStatusMissed;",
                  "tests[\"Body contains 'serviceOrdersByStatus'\"] = !contentserviceOrdersByStatusMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "https://mvxtesting.k3devops.nl:7048/NAV/api/beta/companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)/imvServiceOrderStatus?$expand=serviceOrdersByStatus",
              "protocol": "https",
              "host": [
                "mvxtesting",
                "k3devops",
                "nl"
              ],
              "port": "7048",
              "path": [
                "NAV",
                "api",
                "beta",
                "companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)",
                "imvServiceOrderStatus"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "serviceOrdersByStatus"
                }
              ]
            }
          },
          "response": [
            {
              "id": "92e93f28-7208-4e3a-b4af-00e1064d3c94",
              "name": "ServiceOrderStatus with Status = Waiting for Payment",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic SU1WX0FQSVVTRVI6UEBzc3dvcmQwMQ=="
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "https://mvxtesting.k3devops.nl:7048/NAV/api/beta/companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)/imvServiceOrderStatus?$filter=status eq 'Waiting for Payment'&$expand=serviceOrdersByStatus",
                  "protocol": "https",
                  "host": [
                    "mvxtesting",
                    "k3devops",
                    "nl"
                  ],
                  "port": "7048",
                  "path": [
                    "NAV",
                    "api",
                    "beta",
                    "companies(0ca924ca-0443-499a-87a3-6f9bfc998e96)",
                    "imvServiceOrderStatus"
                  ],
                  "query": [
                    {
                      "key": "$filter",
                      "value": "status eq 'Waiting for Payment'"
                    },
                    {
                      "key": "$expand",
                      "value": "serviceOrdersByStatus"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": "Text",
              "header": [],
              "cookie": [],
              "responseTime": null,
              "body": ""
            }
          ]
        },
        {
          "_postman_id": "7d94e08f-c800-4f03-b25a-c4fa6bcafc37",
          "name": "ReserveTimeSlots",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9abdbd43-f5b3-49a8-8d06-dcfd10c07ae9",
                "exec": [
                  "console.log('imvReservesTimeSlot Entity Automated Tests');",
                  "tests[\"Status Code is 201\"] = responseCode.code === 201;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains '@odata.etag'\"] = jsonData.hasOwnProperty(\"@odata.etag\");",
                  "tests[\"Body contains 'timeSlotNo'\"] = jsonData.hasOwnProperty(\"timeSlotNo\");",
                  "tests[\"Body contains 'serviceProduct'\"] = jsonData.hasOwnProperty(\"serviceProduct\");",
                  "tests[\"Body contains 'date'\"] = jsonData.hasOwnProperty(\"date\");",
                  "tests[\"Body contains 'weight'\"] = jsonData.hasOwnProperty(\"weight\");",
                  "tests[\"Body contains 'volume'\"] = jsonData.hasOwnProperty(\"volume\");",
                  "tests[\"Body contains 'quantity'\"] = jsonData.hasOwnProperty(\"quantity\");",
                  "tests[\"Body contains 'capacity'\"] = jsonData.hasOwnProperty(\"capacity\");",
                  "tests[\"Body contains 'orderNo'\"] = jsonData.hasOwnProperty(\"orderNo\");",
                  "tests[\"Body contains 'storeNo'\"] = jsonData.hasOwnProperty(\"storeNo\");",
                  "tests[\"Body contains 'multiSlot'\"] = jsonData.hasOwnProperty(\"multiSlot\");",
                  "tests[\"Body contains 'postCode'\"] = jsonData.hasOwnProperty(\"postCode\");",
                  "tests[\"Body contains 'action'\"] = jsonData.hasOwnProperty(\"action\");",
                  "tests[\"Body contains 'reservationID'\"] = jsonData.hasOwnProperty(\"reservationID\");",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "        {\n            \"timeSlotNo\": 480,\n            \"serviceProduct\": \"123\",\n            \"date\": \"2017-02-06\",\n            \"weight\": 1,\n            \"volume\": 1,\n            \"quantity\": 1,\n            \"capacity\": 1,\n            \"orderNo\": \"ABC\",\n            \"storeNo\": \"S001\",\n            \"postCode\": \"\",\n            \"action\": \"New\"\n        }"
            },
            "url": "{{url}}{{serviceOfficeCompany}}imvReservesTimeSlot"
          },
          "response": []
        },
        {
          "_postman_id": "081bfcc5-8284-4c53-8501-ca966a514d03",
          "name": "TimeSlotRequests",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "01caf6a3-1683-4417-b1fd-a512ee283ff1",
                "exec": [
                  "console.log('imvTimeSlotRequests Entity Automated Tests');",
                  "tests[\"Status Code is 200\"] = responseCode.code === 200;",
                  "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
                  "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
                  "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
                  "",
                  "var contentOdataEtagMissed, contentIdMissed, contentStoreNoMissed, contentPostCodeMissed, contentStartDateMissed, contentStartTimeMissed, contentEndDateMissed, contentServiceProductNoMissed,contentServiceProductTypeMissed,contentWeightMissed,contentVolumeMissed,contentQuantityMissed,contentCapacityMissed, contentImvTimeSlotRequestResultsMissed;",
                  "",
                  "if (jsonData.hasOwnProperty(\"value\"))",
                  "{",
                  "    jsonData.value.forEach(function(param){",
                  "        if(!param.hasOwnProperty(\"@odata.etag\"))",
                  "            contentOdataEtagMissed = true;",
                  "        if(!param.hasOwnProperty(\"id\"))",
                  "            contentIdMissed = true;",
                  "        if(!param.hasOwnProperty(\"storeNo\"))",
                  "            contentStoreNoMissed = true;",
                  "        if(!param.hasOwnProperty(\"postCode\"))",
                  "            contentPostCodeMissed = true;",
                  "        if(!param.hasOwnProperty(\"startDate\"))",
                  "            contentStartDateMissed = true;",
                  "        if(!param.hasOwnProperty(\"startTime\"))",
                  "            contentStartTimeMissed = true;",
                  "        if(!param.hasOwnProperty(\"endDate\"))",
                  "            contentEndDateMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceProductNo\"))",
                  "            contentServiceProductNoMissed = true;",
                  "        if(!param.hasOwnProperty(\"serviceProductType\"))",
                  "            contentServiceProductTypeMissed = true;",
                  "        if(!param.hasOwnProperty(\"weight\"))",
                  "            contentWeightMissed = true;",
                  "        if(!param.hasOwnProperty(\"volume\"))",
                  "            contentVolumeMissed = true;",
                  "        if(!param.hasOwnProperty(\"quantity\"))",
                  "            contentQuantityMissed = true;",
                  "        if(!param.hasOwnProperty(\"capacity\"))",
                  "            contentCapacityMissed = true;",
                  "        if(!param.hasOwnProperty(\"imvTimeSlotRequestResults\"))",
                  "            contentImvTimeSlotRequestResultsMissed = true;",
                  "    })",
                  "}",
                  "else {",
                  "    contentOdataEtagMissed = contentIdMissed = contentStoreNoMissed = contentPostCodeMissed = contentStartDateMissed = contentStartTimeMissed = contentEndDateMissed = contentServiceProductNoMissed = contentServiceProductTypeMissed = contentWeightMissed = contentVolumeMissed = contentQuantityMissed = contentCapacityMissed = contentImvTimeSlotRequestResultsMissed = true;",
                  "}",
                  "tests[\"Body contains '@odata.etag'\"] = !contentOdataEtagMissed;",
                  "tests[\"Body contains 'id'\"] = !contentIdMissed;",
                  "tests[\"Body contains 'storeNo'\"] = !contentStoreNoMissed;",
                  "tests[\"Body contains 'postCode'\"] = !contentPostCodeMissed;",
                  "tests[\"Body contains 'startDate'\"] = !contentStartDateMissed;",
                  "tests[\"Body contains 'startTime'\"] = !contentStartTimeMissed;",
                  "tests[\"Body contains 'endDate'\"] = !contentEndDateMissed;",
                  "tests[\"Body contains 'serviceProductNo'\"] = !contentServiceProductNoMissed;",
                  "tests[\"Body contains 'serviceProductType'\"] = !contentServiceProductTypeMissed;",
                  "tests[\"Body contains 'weight'\"] = !contentWeightMissed;",
                  "tests[\"Body contains 'volume'\"] = !contentVolumeMissed;",
                  "tests[\"Body contains 'quantity'\"] = !contentQuantityMissed;",
                  "tests[\"Body contains 'capacity'\"] = !contentCapacityMissed;",
                  "tests[\"Body contains 'imvTimeSlotRequestResults'\"] = !contentImvTimeSlotRequestResultsMissed;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{url}}{{serviceOfficeCompany}}imvTimeSlotRequests?$expand=imvTimeSlotRequestResults($filter=fullyBooked eq false)&$filter=(serviceProductNo eq '40000362') and (storeNo eq '235') and (postCode eq '555') and (startDate eq 2018-10-03) and (endDate eq 2018-11-30) and (weight eq 101)",
              "host": [
                "{{url}}{{serviceOfficeCompany}}imvTimeSlotRequests"
              ],
              "query": [
                {
                  "key": "$expand",
                  "value": "imvTimeSlotRequestResults($filter=fullyBooked eq false)"
                },
                {
                  "key": "$filter",
                  "value": "(serviceProductNo eq '40000362') and (storeNo eq '235') and (postCode eq '555') and (startDate eq 2018-10-03) and (endDate eq 2018-11-30) and (weight eq 101)"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "cdd10595-e52b-41e8-b502-69ee3c2c9049",
      "name": "ShoppingBags",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "03d40de6-67ee-4a0d-b948-069cecd547a9",
            "exec": [
              "console.log('imvItems Entity Automated Tests');",
              "tests[\"Status Code is 201\"] = responseCode.code === 201;",
              "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
              "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
              "tests[\"Body contains '@odata.etag'\"] = jsonData.hasOwnProperty(\"@odata.etag\");",
              "tests[\"Body contains 'id'\"] = jsonData.hasOwnProperty(\"id\");",
              "tests[\"Body contains 'customerNumber'\"] = jsonData.hasOwnProperty(\"customerNumber\");",
              "tests[\"Body contains 'currencyCode'\"] = jsonData.hasOwnProperty(\"currencyCode\");",
              "tests[\"Body contains 'imvShoppingBagLines'\"] = jsonData.hasOwnProperty(\"imvShoppingBagLines\");",
              "",
              "var contentDocumentIdMissed, contentSequenceMissed, contentItemIdMissed, contentItemNumberMissed, contentStoreNumberMissed, contentLocationCodeMissed, contentUnitPriceMissed, contentSprItemMissed, contentQtytoCheckMissed, contentQtyinStockMissed, contentAvailbableMissed;",
              "",
              "if (jsonData.hasOwnProperty(\"imvShoppingBagLines\"))",
              "{",
              "    jsonData.imvShoppingBagLines.forEach(function(param){",
              "        if(!param.hasOwnProperty(\"documentId\"))",
              "            contentDocumentIdMissed = true;",
              "        if(!param.hasOwnProperty(\"sequence\"))",
              "            contentSequenceMissed = true;",
              "        if(!param.hasOwnProperty(\"itemId\"))",
              "            contentItemIdMissed = true;",
              "        if(!param.hasOwnProperty(\"itemNumber\"))",
              "            contentItemNumberMissed = true;",
              "        if(!param.hasOwnProperty(\"storeNumber\"))",
              "            contentStoreNumberMissed = true;",
              "        if(!param.hasOwnProperty(\"locationCode\"))",
              "            contentLocationCodeMissed = true;",
              "        if(!param.hasOwnProperty(\"unitPrice\"))",
              "            contentUnitPriceMissed = true;",
              "        if(!param.hasOwnProperty(\"sprItem\"))",
              "            contentSprItemMissed = true;",
              "        if(!param.hasOwnProperty(\"qtytoCheck\"))",
              "            contentQtytoCheckMissed = true;",
              "        if(!param.hasOwnProperty(\"qtyinStock\"))",
              "            contentQtyinStockMissed = true;",
              "        if(!param.hasOwnProperty(\"available\"))",
              "            contentAvailbableMissed = true;",
              "    })",
              "}",
              "else {",
              "    contentDocumentIdMissed = contentSequenceMissed = contentItemIdMissed = contentItemNumberMissed = contentStoreNumberMissed = contentLocationCodeMissed = contentUnitPriceMissed = contentSprItemMissed = contentQtytoCheckMissed = contentQtyinStockMissed = contentAvailbableMissed = true;",
              "}",
              "tests[\"Body contains 'documentId'\"] = !contentDocumentIdMissed;",
              "tests[\"Body contains 'sequence'\"] = !contentSequenceMissed;",
              "tests[\"Body contains 'itemId'\"] = !contentItemIdMissed;",
              "tests[\"Body contains 'itemNumber'\"] = !contentItemNumberMissed;",
              "tests[\"Body contains 'storeNumber'\"] = !contentStoreNumberMissed;",
              "tests[\"Body contains 'locationCode'\"] = !contentLocationCodeMissed;",
              "tests[\"Body contains 'unitPrice'\"] = !contentUnitPriceMissed;",
              "tests[\"Body contains 'sprItem'\"] = !contentSprItemMissed;",
              "tests[\"Body contains 'qtytoCheck'\"] = !contentQtytoCheckMissed;",
              "tests[\"Body contains 'qtyinStock'\"] = !contentQtyinStockMissed;",
              "tests[\"Body contains 'available'\"] = !contentAvailbableMissed;",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"imvShoppingBagLines\": [\r\n\r\n        {\r\n            \"sequence\": 0,\r\n            \"itemId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"storeNumber\": \"\",\r\n            \"qtytoCheck\": 0\r\n        }\r\n    ]\r\n}\r\n"
        },
        "url": {
          "raw": "{{url}}{{storeCompany}}imvShoppingBags?$expand=imvShoppingBagLines",
          "host": [
            "{{url}}{{storeCompany}}imvShoppingBags"
          ],
          "query": [
            {
              "key": "$expand",
              "value": "imvShoppingBagLines "
            }
          ]
        },
        "description": "Show MVXs' Items"
      },
      "response": []
    },
    {
      "_postman_id": "c6022a09-d880-43a3-bdcd-2bafc7b63f85",
      "name": "EcomInvoice",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b7df716d-8d97-46cf-8ec6-40e035b683b8",
            "exec": [
              "console.log('Get imvEcomInvoices Entity Automated Tests');",
              "tests[\"Status Code is 200\"] = responseCode.code === 200;",
              "tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
              "tests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\").has(\"application/json\");",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "tests[\"Body contains '@odata.context'\"] = jsonData.hasOwnProperty(\"@odata.context\");",
              "tests[\"Body contains 'value'\"] = jsonData.hasOwnProperty(\"value\");",
              "",
              "if (jsonData.hasOwnProperty(\"value\"))",
              "{",
              "    jsonData.value.forEach(function(param){",
              "        tests[\"Body contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
              "        tests[\"Body contains 'documentId'\"] =  param.hasOwnProperty(\"documentId\");",
              "        tests[\"Body contains 'eCommOrderNo'\"] =  param.hasOwnProperty(\"eCommOrderNo\");",
              "        tests[\"Body contains 'transactionNumber'\"] =  param.hasOwnProperty(\"transactionNumber\");",
              "        tests[\"Body contains 'receiptNumber'\"] =  param.hasOwnProperty(\"receiptNumber\");",
              "        tests[\"Body contains 'date'\"] =  param.hasOwnProperty(\"date\");",
              "        tests[\"Body contains 'time'\"] =  param.hasOwnProperty(\"time\");",
              "        tests[\"Body contains 'customerNumber'\"] = param.hasOwnProperty(\"customerNumber\");",
              "        tests[\"Body contains 'netAmount'\"] = param.hasOwnProperty(\"netAmount\");",
              "        tests[\"Body contains 'grossAmount'\"] = param.hasOwnProperty(\"grossAmount\");",
              "        tests[\"Body contains 'payment'\"] = param.hasOwnProperty(\"payment\");",
              "        tests[\"Body contains 'numberOfItems'\"] = param.hasOwnProperty(\"numberOfItems\");",
              "        tests[\"Body contains 'imvEcomInvoiceLines@odata.context'\"] = param.hasOwnProperty(\"imvEcomInvoiceLines@odata.context\");",
              "        tests[\"Body contains 'imvEcomInvoiceLines'\"] = param.hasOwnProperty(\"imvEcomInvoiceLines\");",
              "        if (param.hasOwnProperty(\"imvEcomInvoiceLines\"))",
              "        {",
              "            param.imvEcomInvoiceLines.forEach(function(param){",
              "                tests[\"imvEcomInvoiceLines contains '@odata.etag'\"] = param.hasOwnProperty(\"@odata.etag\");",
              "                tests[\"imvEcomInvoiceLines contains 'documentId'\"] = param.hasOwnProperty(\"documentId\");",
              "                tests[\"imvEcomInvoiceLines contains 'sequence'\"] = param.hasOwnProperty(\"sequence\");",
              "                tests[\"imvEcomInvoiceLines contains 'quantity'\"] = param.hasOwnProperty(\"quantity\");",
              "                tests[\"imvEcomInvoiceLines contains 'price'\"] = param.hasOwnProperty(\"price\");",
              "                tests[\"imvEcomInvoiceLines contains 'taxAmount'\"] = param.hasOwnProperty(\"taxAmount\");",
              "            })",
              "        }",
              "    })",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{url}}{{storeCompany}}/imvEcomInvoices?$expand=imvEcomInvoiceLines",
          "host": [
            "{{url}}{{storeCompany}}"
          ],
          "path": [
            "imvEcomInvoices"
          ],
          "query": [
            {
              "key": "$expand",
              "value": "imvEcomInvoiceLines"
            }
          ]
        },
        "description": "Exposes Transaction Header and Trans. Sales Entries for related E-Comm Orders. Unique transaction can be found by documentId (E-Comm Order Id), eCommOrderNo or transactionNumber."
      },
      "response": []
    }
  ],
  "auth": {
    "type": "basic",
    "basic": {
      "password": "{{API_Password}}",
      "username": "{{API_User}}"
    }
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "111f5651-ad9c-435d-a132-b03a6a12310c",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "8c917914-2a48-4e34-b512-ae8281384595",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}